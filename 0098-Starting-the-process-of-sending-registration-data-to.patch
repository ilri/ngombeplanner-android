From 06d982be30356419e06d0a4bc544e8d6cbdf7dc2 Mon Sep 17 00:00:00 2001
From: Jason Rogena <jasonrogena@gmail.com>
Date: Wed, 30 Oct 2013 13:31:35 +0300
Subject: [PATCH 098/213] Starting the process of sending registration data to
 server

---
 .../cgiar/ilri/mistro/farmer/carrier/Farmer.java   |   5 +
 .../mistro/farmer/ui/CowRegistrationScreen.java    | 170 ++++++++++++++-------
 .../ilri/mistro/farmer/ui/MultiselectRenderer.java |  37 +++--
 .../farmer/ui/localization/StringResources.java    |  10 ++
 .../ilri/mistro/farmer/utils/DataHandler.java      |  41 +++++
 5 files changed, 195 insertions(+), 68 deletions(-)
 create mode 100644 JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/utils/DataHandler.java

diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
index 24fa896..a268ecc 100644
--- a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
@@ -146,4 +146,9 @@ public class Farmer {
         }
         return  jsonObject;
     }
+    
+    public void syncWithServer(){
+        JSONObject farmerJSONObject = getJsonObject();
+        
+    }
 }
\ No newline at end of file
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java
index 83d7aef..008acfe 100644
--- a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java
@@ -62,6 +62,8 @@ public class CowRegistrationScreen extends Form implements Screen, ActionListene
     private ComboBox sexCB;
     private Label deformityL;
     private ComboBox deformityCB;
+    private Label otherDeformityL;
+    private TextField otherDeformityTF;
     private MultiselectRenderer deformityMultiselectRenderer;
     private Label serviceTypeL;
     private ComboBox serviceTypeCB;
@@ -194,10 +196,19 @@ public class CowRegistrationScreen extends Form implements Screen, ActionListene
         deformityMultiselectRenderer = new MultiselectRenderer(Locale.getStringArrayInLocale(locale, ArrayResources.deformities_array),0);
         deformityCB.setRenderer(deformityMultiselectRenderer);
         deformityCB.addActionListener(deformityMultiselectRenderer);
+        deformityCB.addActionListener(this);
         setComponentStyle(deformityCB, true);
         //deformityCB.setRenderer(new MultiselectRenderer(Locale.getStringArrayInLocale(locale, ArrayResources.deformities_array)));
         this.addComponent(deformityCB);
         
+        otherDeformityL = new Label(Locale.getStringInLocale(locale, StringResources.other_deformity));
+        setLabelStyle(otherDeformityL);
+        this.addComponent(otherDeformityL);
+        
+        otherDeformityTF = new TextField();
+        setComponentStyle(otherDeformityTF, false);
+        this.addComponent(otherDeformityTF);
+        
         serviceTypeL = new Label(Locale.getStringInLocale(locale, StringResources.service_type_used));
         setLabelStyle(serviceTypeL);
         this.addComponent(serviceTypeL);
@@ -292,6 +303,15 @@ public class CowRegistrationScreen extends Form implements Screen, ActionListene
             infoDialog.show(100, 100, 11, 11, true);
             return false;
         }
+        
+        if(otherDeformityTF.isFocusable()){
+            if(otherDeformityTF.getText().trim().length() == 0){
+                otherDeformityTF.requestFocus();
+                text.setText(Locale.getStringInLocale(locale, StringResources.spec_other_deformity));
+                infoDialog.show(100, 100, 11, 11, true);
+                return false;
+            }
+        }
         return true;
     }
     
@@ -306,10 +326,13 @@ public class CowRegistrationScreen extends Form implements Screen, ActionListene
         String[] ageTypesInEN = Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.age_type_array);
         thisCow.setAgeType(ageTypesInEN[ageTypeCB.getSelectedIndex()]);
         //thisCow.setDateOfBirth((Date) dateOfBirthS.getValue());
-        thisCow.setBreeds(breedMultiselectRenderer.getSelectedItems());
+        thisCow.setBreeds(breedMultiselectRenderer.getSelectedItems(Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.breeds_array)));
         String[] sexInEN = Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.sex_array);
         thisCow.setSex(sexInEN[sexCB.getSelectedIndex()]);
-        thisCow.setDeformities(deformityMultiselectRenderer.getSelectedItems());
+        thisCow.setDeformities(deformityMultiselectRenderer.getSelectedItems(Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.deformities_array)));
+        if(otherDeformityTF.isFocusable()){
+            thisCow.setOtherDeformity(otherDeformityTF.getText());
+        }
         String[] serviceTypesInEN = Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.service_types);
         thisCow.setServiceType(serviceTypesInEN[serviceTypeCB.getSelectedIndex()]);
         
@@ -368,7 +391,7 @@ public class CowRegistrationScreen extends Form implements Screen, ActionListene
             dateOfBirthS.setValue(new Long(System.currentTimeMillis()));
         }*/
         
-        String[] breedsInEN = Locale.getStringArrayInLocale(locale, ArrayResources.breeds_array);
+        String[] breedsInEN = Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.breeds_array);
         //for each breed, check if breed in cow's breed array
         String[] cowBreeds = thisCow.getBreeds();
         int noSelectedBreeds = 0;
@@ -395,22 +418,26 @@ public class CowRegistrationScreen extends Form implements Screen, ActionListene
         }
         
         
-        String[] sexInEN = Locale.getStringArrayInLocale(locale, ArrayResources.sex_array);
+        String[] sexInEN = Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.sex_array);
         for(int i = 0; i < sexInEN.length; i++){
             if(sexInEN[i].equals(thisCow.getSex())){
                 sexCB.setSelectedIndex(i);
             }
         }
         
-        String[] deformitiesInEN = Locale.getStringArrayInLocale(locale, ArrayResources.deformities_array);
+        String[] deformitiesInEN = Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.deformities_array);
         String[] cowDeformities = thisCow.getDeformities();
         int noDeformities = 0;
+        boolean hasOtherDeformity = false;
         if(cowDeformities!=null){
             for(int i = 0; i < deformitiesInEN.length; i++ ){
                 for(int j = 0; j < cowDeformities.length; j++){
                     if(deformitiesInEN[i].equals(cowDeformities[j])){
                         noDeformities++;
                     }
+                    if(cowDeformities[j].equals("Other")){
+                        hasOtherDeformity = true;
+                    }
                 }
             }
             int[] cowDeformitiesIndexes = new int[noDeformities];
@@ -426,8 +453,12 @@ public class CowRegistrationScreen extends Form implements Screen, ActionListene
             if(cowDeformitiesIndexes.length>0)
                 deformityMultiselectRenderer.setSelectedItems(cowDeformitiesIndexes);
         }
+        if(hasOtherDeformity){
+            otherDeformityTF.setText(thisCow.getOtherDeformity());
+        }
+        deformitySelected();
         
-        String[] serviceTypesInEN = Locale.getStringArrayInLocale(locale, ArrayResources.service_types);
+        String[] serviceTypesInEN = Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.service_types);
         String serviceType = null;
         for(int i =0; i < serviceTypesInEN.length; i++){
             if(serviceTypesInEN[i].equals(thisCow.getServiceType())){
@@ -553,71 +584,56 @@ public class CowRegistrationScreen extends Form implements Screen, ActionListene
     }
     
     private void serviceTypeSelected(){
-        String[] serviceTypesInEN = Locale.getStringArrayInLocale(locale, ArrayResources.service_types);
+        String[] serviceTypesInEN = Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.service_types);
         int selectedIndex = serviceTypeCB.getSelectedIndex();
         System.out.println(serviceTypesInEN[selectedIndex]);
         if(serviceTypesInEN[selectedIndex].equals(Cow.SERVICE_TYPE_BULL)){
-            sireL.getStyle().setFgColor(0x000000);
-            sireCB.setFocusable(true);
-            sireCB.getStyle().setBgColor(0xFFFFFF);
+            setLabelFocusable(sireL, true);
+            setComponentFocusable(sireCB, true);
             
-            damL.getStyle().setFgColor(0x000000);
-            damCB.setFocusable(true);
-            damCB.getStyle().setBgColor(0xFFFFFF);
+            setLabelFocusable(damL, true);
+            setComponentFocusable(damCB, true);
             
-            countryL.getStyle().setFgColor(0x000000);
-            countryCB.setFocusable(true);
-            countryCB.getStyle().setBgColor(0xFFFFFF);
+            setLabelFocusable(countryL, true);
+            setComponentFocusable(countryCB, true);
             
-            strawNumberL.getStyle().setFgColor(0xC0C0C0);
-            strawNumberTF.setFocusable(false);
-            strawNumberTF.getStyle().setBgColor(0xC0C0C0);
+            setLabelFocusable(strawNumberL, false);
+            setComponentFocusable(strawNumberTF, false);
             
-            embryoNumberL.getStyle().setFgColor(0xC0C0C0);
-            embryoNumberTF.setFocusable(false);
-            embryoNumberTF.getStyle().setBgColor(0xC0C0C0);
+            setLabelFocusable(embryoNumberL, false);
+            setComponentFocusable(embryoNumberTF, false);
         }
         else if(serviceTypesInEN[selectedIndex].equals(Cow.SERVICE_TYPE_AI)){
-            sireL.getStyle().setFgColor(0xC0C0C0);
-            sireCB.setFocusable(false);
-            sireCB.getStyle().setBgColor(0xC0C0C0);
+            setLabelFocusable(sireL, false);
+            setComponentFocusable(sireCB, false);
             
-            damL.getStyle().setFgColor(0x000000);
-            damCB.setFocusable(true);
-            damCB.getStyle().setBgColor(0xFFFFFF);
+            setLabelFocusable(damL, true);
+            setComponentFocusable(damCB, true);
             
-            countryL.getStyle().setFgColor(0xC0C0C0);
-            countryCB.setFocusable(false);
-            countryCB.getStyle().setBgColor(0xC0C0C0);
+            setLabelFocusable(countryL, false);
+            setComponentFocusable(countryCB, false);
             
-            strawNumberL.getStyle().setFgColor(0x000000);
-            strawNumberTF.setFocusable(true);
-            strawNumberTF.getStyle().setBgColor(0xFFFFFF);
+            setLabelFocusable(strawNumberL, true);
+            setComponentFocusable(strawNumberTF, true);
             
-            embryoNumberL.getStyle().setFgColor(0xC0C0C0);
-            embryoNumberTF.setFocusable(false);
-            embryoNumberTF.getStyle().setBgColor(0xC0C0C0);
+            setLabelFocusable(embryoNumberL, false);
+            setComponentFocusable(embryoNumberTF, false);
         }
         else if(serviceTypesInEN[selectedIndex].equals(Cow.SERVICE_TYPE_ET)){
-            sireL.getStyle().setFgColor(0xC0C0C0);
-            sireCB.setFocusable(false);
-            sireCB.getStyle().setBgColor(0xC0C0C0);
+            setLabelFocusable(sireL, false);
+            setComponentFocusable(sireCB, false);
             
-            damL.getStyle().setFgColor(0xC0C0C0);
-            damCB.setFocusable(false);
-            damCB.getStyle().setBgColor(0xC0C0C0);
+            setLabelFocusable(damL, false);
+            setComponentFocusable(damCB, false);
             
-            countryL.getStyle().setFgColor(0xC0C0C0);
-            countryCB.setFocusable(false);
-            countryCB.getStyle().setBgColor(0xC0C0C0);
+            setLabelFocusable(countryL, false);
+            setComponentFocusable(countryCB, false);
             
-            strawNumberL.getStyle().setFgColor(0xC0C0C0);
-            strawNumberTF.setFocusable(false);
-            strawNumberTF.getStyle().setBgColor(0xC0C0C0);
+            setLabelFocusable(strawNumberL, false);
+            setComponentFocusable(strawNumberTF, false);
             
-            embryoNumberL.getStyle().setFgColor(0x000000);
-            embryoNumberTF.setFocusable(true);
-            embryoNumberTF.getStyle().setBgColor(0xFFFFFF);
+            setLabelFocusable(embryoNumberL, true);
+            setComponentFocusable(embryoNumberTF, true);
         }
     }
     
@@ -636,7 +652,55 @@ public class CowRegistrationScreen extends Form implements Screen, ActionListene
     public void actionPerformed(ActionEvent evt) {
         if(evt.getComponent().equals(serviceTypeCB)){
             serviceTypeSelected();
-            System.out.println("called");
+        }
+        else if(evt.getComponent().equals(deformityCB)){
+            deformitySelected();
+        }
+    }
+    
+    private void deformitySelected(){
+        System.out.println("deformity selected");
+        String[] selectedDeformities = deformityMultiselectRenderer.getSelectedItems(Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.deformities_array));
+        boolean hasOther = false;
+        if(selectedDeformities != null){
+            for(int i = 0; i < selectedDeformities.length; i++){
+                if(selectedDeformities[i].equals("Other")){
+                    hasOther = true;
+                }
+            }
+            if(hasOther){
+                setLabelFocusable(otherDeformityL, true);
+            setComponentFocusable(otherDeformityTF, true);
+            }
+            else{
+                setLabelFocusable(otherDeformityL, false);
+            setComponentFocusable(otherDeformityTF, false);
+            }
+        }
+        else{
+            setLabelFocusable(otherDeformityL, false);
+            setComponentFocusable(otherDeformityTF, false);
+        }
+        
+    }
+    
+    private void setLabelFocusable(Label label, boolean focusable){
+        if(focusable){
+            label.getStyle().setFgColor(0x000000);
+        }
+        else{
+            label.getStyle().setFgColor(0xC0C0C0);
+        }
+    }
+    
+    private void setComponentFocusable(Component component, boolean focusable){
+        if(focusable){
+            component.getStyle().setBgColor(0xFFFFFF);
+            component.setFocusable(true);
+        }
+        else{
+            component.getStyle().setBgColor(0xC0C0C0);
+            component.setFocusable(false);
         }
     }
     
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java
index f3e7d2c..f01bd1e 100644
--- a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java
@@ -67,27 +67,34 @@ public class MultiselectRenderer implements ListCellRenderer, ActionListener{
         }
     }
     
-    public String[] getSelectedItems() {
-        String[] result = null;
-        int numberSelected = 0;
-        for(int i = 0; i < comboBoxItems.size(); i++){
-            ComboBoxItem currentItem = (ComboBoxItem)comboBoxItems.elementAt(i);
-            if(currentItem.isChecked()) {
-                numberSelected++;
-            }
-        }
-        if(numberSelected > 0) {
-            result = new String[numberSelected];
-            int currentIndex = 0;
+    public String[] getSelectedItems(String[] itemsInEN) {
+        if(itemsInEN.length == comboBoxItems.size()){
+            String[] result = null;
+            int numberSelected = 0;
             for(int i = 0; i < comboBoxItems.size(); i++){
                 ComboBoxItem currentItem = (ComboBoxItem)comboBoxItems.elementAt(i);
                 if(currentItem.isChecked()) {
-                    result[currentIndex] = currentItem.getText();
-                    currentIndex++;
+                    numberSelected++;
+                }
+            }
+            if(numberSelected > 0) {
+                result = new String[numberSelected];
+                int currentIndex = 0;
+                for(int i = 0; i < comboBoxItems.size(); i++){
+                    ComboBoxItem currentItem = (ComboBoxItem)comboBoxItems.elementAt(i);
+                    if(currentItem.isChecked()) {
+                        result[currentIndex] = itemsInEN[i];
+                        currentIndex++;
+                    }
                 }
             }
+            return result;
         }
-        return result;
+        else{
+            System.err.println("Size of array in EN locale is not the same size as number of combo box items");
+            return null;
+        }
+        
     }
     
     public void setSelectedItems(int[] itemIndexes) {
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/localization/StringResources.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/localization/StringResources.java
index 192c43b..f46a128 100644
--- a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/localization/StringResources.java
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/localization/StringResources.java
@@ -409,4 +409,14 @@ public class StringResources {
         "Age Type",
         ""
     };
+    
+    public static final String[] other_deformity = {
+        "Other Deformity",
+        ""
+    };
+    
+    public static final String[] spec_other_deformity = {
+        "Please specify the cow's extra deformity",
+        ""
+    };
 }
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/utils/DataHandler.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/utils/DataHandler.java
new file mode 100644
index 0000000..0a8e408
--- /dev/null
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/utils/DataHandler.java
@@ -0,0 +1,41 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+
+package org.cgiar.ilri.mistro.farmer.utils;
+
+import org.json.me.JSONObject;
+
+/**
+ *
+ * @author jason
+ */
+public class DataHandler {
+    public static final String ACKNOWLEDGE_OK="533783";
+    public static final String NO_DATA="77732";
+    public static final String DATA_ERROR="934342";
+    public static final String CODE_USER_NOT_AUTHENTICATED="43322";
+    public static final String CODE_SIM_CARD_REGISTERED="83242";
+    private static final String TAG="DataHandler";
+    private static final int HTTP_POST_TIMEOUT =20000;
+    private static final int HTTP_RESPONSE_TIMEOUT =20000;
+    private static final String BASE_URL="http://192.168.2.232/~jason/MistroFarmerProject/web";
+    //private static final String BASE_URL="http://hpc.ilri.cgiar.org/~jrogena/mistro_web";
+    public static final String FARMER_REGISTRATION_URL="/php/farmer/registration.php";
+    public static final String FARMER_AUTHENTICATION_URL="/php/farmer/authentication.php";
+    public static final String FARMER_SIM_CARD_REGISTRATION_URL="/php/farmer/sim_card_registration.php";
+    public static final String FARMER_FETCH_COW_IDENTIFIERS_URL="/php/farmer/fetch_cow_identifiers.php";
+    public static final String FARMER_ADD_MILK_PRODUCTION_URL="/php/farmer/add_milk_production.php";
+    public static final String FARMER_FETCH_MILK_PRODUCTION_HISTORY_URL="/php/farmer/fetch_milk_production_history.php";
+    public static final String FARMER_ADD_COW_EVENT_URL="/php/farmer/add_cow_event.php";
+    public static final String FARMER_FETCH_COW_EVENTS_HISTORY_URL="/php/farmer/fetch_cow_events_history.php";
+    public static final String FARMER_FETCH_COW_SERVICING_EVENTS_URL="/php/farmer/fetch_servicing_events.php";
+    public static final String SP_KEY_LOCALE = "locale";
+    public static final String SP_KEY_MILK_QUANTITY_TYPE = "milkQuantityTYpe";
+    
+    public static void sendDataToServer(JSONObject jSONObject){
+        
+    }
+}
-- 
2.7.1

