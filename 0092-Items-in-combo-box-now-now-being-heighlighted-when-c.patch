From ebdc5eb8fa64507bd33ab68cb476915050a0d460 Mon Sep 17 00:00:00 2001
From: Jason Rogena <jasonrogena@gmail.com>
Date: Mon, 21 Oct 2013 18:38:47 +0300
Subject: [PATCH 092/213] Items in combo box now now being heighlighted when
 combo box is in focus

---
 .../mistro/farmer/ui/AddMilkProductionScreen.java  |  9 ++
 .../mistro/farmer/ui/CowRegistrationScreen.java    |  9 ++
 .../cgiar/ilri/mistro/farmer/ui/LoginScreen.java   |  5 +-
 .../ilri/mistro/farmer/ui/MainMenuScreen.java      | 95 ++++++++++++++++++++++
 .../mistro/farmer/ui/MilkProductionScreen.java     | 62 ++++++++++++++
 .../mistro/farmer/ui/MistroListCellRenderer.java   | 32 ++++++++
 .../ilri/mistro/farmer/ui/MultiselectRenderer.java | 30 +++++++
 7 files changed, 241 insertions(+), 1 deletion(-)
 create mode 100644 JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/AddMilkProductionScreen.java
 create mode 100644 JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MainMenuScreen.java
 create mode 100644 JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MilkProductionScreen.java
 create mode 100644 JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MistroListCellRenderer.java
 create mode 100644 JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java

diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/AddMilkProductionScreen.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/AddMilkProductionScreen.java
new file mode 100644
index 0000000..a0a7f10
--- /dev/null
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/AddMilkProductionScreen.java
@@ -0,0 +1,9 @@
+package org.cgiar.ilri.mistro.farmer.ui;
+
+/**
+ *
+ * @author jason
+ */
+public class AddMilkProductionScreen {
+    
+}
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java
index 59e24df..0bea967 100644
--- a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java
@@ -8,6 +8,7 @@ import com.sun.lwuit.Label;
 import com.sun.lwuit.TextField;
 import com.sun.lwuit.events.ActionEvent;
 import com.sun.lwuit.events.ActionListener;
+import com.sun.lwuit.events.SelectionListener;
 import com.sun.lwuit.layouts.BoxLayout;
 import org.cgiar.ilri.mistro.farmer.Midlet;
 import org.cgiar.ilri.mistro.farmer.ui.localization.ArrayResources;
@@ -126,6 +127,7 @@ public class CowRegistrationScreen extends Form implements Screen{
         
         ageTypeCB = new ComboBox(Locale.getStringArrayInLocale(locale, ArrayResources.age_type_array));
         setComponentStyle(ageTypeCB, true);
+        ageTypeCB.setRenderer(new MistroListCellRenderer(Locale.getStringArrayInLocale(locale, ArrayResources.age_type_array)));
         this.addComponent(ageTypeCB);
         
         dateOfBirthL = new Label(Locale.getStringInLocale(locale, StringResources.date_of_birth));
@@ -142,6 +144,7 @@ public class CowRegistrationScreen extends Form implements Screen{
         
         breedCB = new ComboBox(Locale.getStringArrayInLocale(locale, ArrayResources.breeds_array));
         setComponentStyle(breedCB, true);
+        breedCB.setRenderer(new MultiselectRenderer());
         this.addComponent(breedCB);
         
         sexL = new Label(Locale.getStringInLocale(locale, StringResources.sex));
@@ -150,6 +153,7 @@ public class CowRegistrationScreen extends Form implements Screen{
         
         sexCB = new ComboBox(Locale.getStringArrayInLocale(locale, ArrayResources.sex_array));
         setComponentStyle(sexCB, true);
+        sexCB.setRenderer(new MistroListCellRenderer(Locale.getStringArrayInLocale(locale, ArrayResources.sex_array)));
         this.addComponent(sexCB);
         
         deformityL = new Label(Locale.getStringInLocale(locale, StringResources.deformity));
@@ -158,6 +162,7 @@ public class CowRegistrationScreen extends Form implements Screen{
         
         deformityCB = new ComboBox(Locale.getStringArrayInLocale(locale, ArrayResources.deformities_array));
         setComponentStyle(deformityCB, true);
+        deformityCB.setRenderer(new MultiselectRenderer());
         this.addComponent(deformityCB);
         
         serviceTypeL = new Label(Locale.getStringInLocale(locale, StringResources.service_type_used));
@@ -166,6 +171,7 @@ public class CowRegistrationScreen extends Form implements Screen{
         
         serviceTypeCB = new ComboBox(Locale.getStringArrayInLocale(locale, ArrayResources.service_types));
         setComponentStyle(serviceTypeCB, true);
+        serviceTypeCB.setRenderer(new MistroListCellRenderer(Locale.getStringArrayInLocale(locale, ArrayResources.service_types)));
         this.addComponent(serviceTypeCB);
         
         sireL = new Label(Locale.getStringInLocale(locale, StringResources.sire));
@@ -174,6 +180,7 @@ public class CowRegistrationScreen extends Form implements Screen{
         
         sireCB = new ComboBox(new String[]{" "});
         setComponentStyle(sireCB, true);
+        sireCB.setRenderer(new MistroListCellRenderer(new String[]{" "}));
         this.addComponent(sireCB);
         
         damL = new Label(Locale.getStringInLocale(locale, StringResources.dam));
@@ -182,6 +189,7 @@ public class CowRegistrationScreen extends Form implements Screen{
         
         damCB = new ComboBox(new String[]{" "});
         setComponentStyle(damCB, true);
+        damCB.setRenderer(new MistroListCellRenderer(new String[]{" "}));
         this.addComponent(damCB);
         
         countryL = new Label(Locale.getStringInLocale(locale, StringResources.country_of_origin));
@@ -190,6 +198,7 @@ public class CowRegistrationScreen extends Form implements Screen{
         
         countryCB = new ComboBox(GeneralArrays.common_countries);
         setComponentStyle(countryCB, true);
+        countryCB.setRenderer(new MistroListCellRenderer(GeneralArrays.common_countries));
         this.addComponent(countryCB);
     }
     
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/LoginScreen.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/LoginScreen.java
index 08efa9c..41a5727 100644
--- a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/LoginScreen.java
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/LoginScreen.java
@@ -7,7 +7,6 @@ import com.sun.lwuit.Form;
 import com.sun.lwuit.events.ActionEvent;
 import com.sun.lwuit.events.ActionListener;
 import com.sun.lwuit.layouts.BoxLayout;
-import javax.microedition.midlet.MIDlet;
 import org.cgiar.ilri.mistro.farmer.Midlet;
 import org.cgiar.ilri.mistro.farmer.ui.localization.Locale;
 import org.cgiar.ilri.mistro.farmer.ui.localization.StringResources;
@@ -80,6 +79,10 @@ public class LoginScreen extends Form implements Screen, ActionListener{
             FarmerRegistrationScreen farmerRegistrationScreen = new FarmerRegistrationScreen(midlet, locale);
             farmerRegistrationScreen.start();
         }
+        else if(event.getComponent().equals(loginButton)){
+            MainMenuScreen mainMenuScreen = new MainMenuScreen(midlet, locale);
+            mainMenuScreen.start();
+        }
     }
     
 }
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MainMenuScreen.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MainMenuScreen.java
new file mode 100644
index 0000000..ff8b1b7
--- /dev/null
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MainMenuScreen.java
@@ -0,0 +1,95 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+
+package org.cgiar.ilri.mistro.farmer.ui;
+
+import com.sun.lwuit.Button;
+import com.sun.lwuit.Command;
+import com.sun.lwuit.Component;
+import com.sun.lwuit.Form;
+import com.sun.lwuit.events.ActionEvent;
+import com.sun.lwuit.events.ActionListener;
+import com.sun.lwuit.layouts.BoxLayout;
+import org.cgiar.ilri.mistro.farmer.Midlet;
+import org.cgiar.ilri.mistro.farmer.ui.localization.Locale;
+import org.cgiar.ilri.mistro.farmer.ui.localization.StringResources;
+
+/**
+ *
+ * @author jason
+ */
+public class MainMenuScreen extends Form implements Screen, ActionListener{
+
+    private final int locale;
+    private final Midlet midlet;
+    
+    private Command backCommand;
+    private Button milkProductionB;
+    private Button eventsB;
+    private BoxLayout parentBoxLayout;
+    
+    public MainMenuScreen(Midlet midlet, int locale) {
+        super(Locale.getStringInLocale(locale, StringResources.main_menu));
+        
+        this.locale = locale;
+        this.midlet = midlet;
+        
+        this.parentBoxLayout = new BoxLayout(BoxLayout.Y_AXIS);
+        this.setLayout(parentBoxLayout);
+        
+        backCommand = new Command(Locale.getStringInLocale(locale, StringResources.back));
+        this.addCommand(backCommand);
+        this.addCommandListener(new ActionListener() {
+
+            public void actionPerformed(ActionEvent evt) {
+                if(evt.getCommand().equals(backCommand)) {
+                    LoginScreen loginScreen = new LoginScreen(MainMenuScreen.this.midlet, MainMenuScreen.this.locale);
+                    loginScreen.start();
+                }
+            }
+        });
+        
+        milkProductionB = new Button(Locale.getStringInLocale(locale, StringResources.milk_production));
+        milkProductionB.getStyle().setMargin(100, 10, 0, 0);
+        milkProductionB.getSelectedStyle().setMargin(100, 10, 0, 0);
+        setButtonStyle(milkProductionB);
+        milkProductionB.addActionListener(this);
+        this.addComponent(milkProductionB);
+        
+        eventsB = new Button(Locale.getStringInLocale(locale, StringResources.events));
+        eventsB.getStyle().setMargin(10, 10, 0, 0);
+        eventsB.getSelectedStyle().setMargin(10, 10, 0, 0);
+        setButtonStyle(eventsB);
+        eventsB.addActionListener(this);
+        this.addComponent(eventsB);
+    }
+    
+    private void setButtonStyle(Button button){
+        button.getStyle().setAlignment(Component.CENTER);
+        button.getSelectedStyle().setAlignment(Component.CENTER);
+        button.getSelectedStyle().setBgColor(0x2ecc71);
+    }
+    
+    public void start() {
+        this.show();
+    }
+
+    public void destroy() {
+        
+    }
+
+    public void pause() {
+        
+    }
+
+    public void actionPerformed(ActionEvent evt) {
+        if(evt.getComponent().equals(milkProductionB)){
+            MilkProductionScreen milkProductionScreen = new MilkProductionScreen(midlet, locale);
+            milkProductionScreen.start();
+        }
+    }
+    
+}
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MilkProductionScreen.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MilkProductionScreen.java
new file mode 100644
index 0000000..16445c3
--- /dev/null
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MilkProductionScreen.java
@@ -0,0 +1,62 @@
+package org.cgiar.ilri.mistro.farmer.ui;
+
+import com.sun.lwuit.Command;
+import com.sun.lwuit.Form;
+import com.sun.lwuit.events.ActionEvent;
+import com.sun.lwuit.events.ActionListener;
+import com.sun.lwuit.layouts.BoxLayout;
+import org.cgiar.ilri.mistro.farmer.Midlet;
+import org.cgiar.ilri.mistro.farmer.ui.localization.Locale;
+import org.cgiar.ilri.mistro.farmer.ui.localization.StringResources;
+
+/**
+ *
+ * @author jason
+ */
+public class MilkProductionScreen extends Form implements Screen, ActionListener{
+
+    private final int locale;
+    private final Midlet midlet;
+    
+    private BoxLayout parentBoxLayout;
+    private Command backCommand;
+    
+    public MilkProductionScreen(Midlet midlet, int locale) {
+        super(Locale.getStringInLocale(locale, StringResources.milk_production));
+        this.midlet = midlet;
+        this.locale = locale;
+        
+        this.parentBoxLayout = new BoxLayout(BoxLayout.Y_AXIS);
+        this.setLayout(parentBoxLayout);
+        
+        backCommand = new Command(Locale.getStringInLocale(locale, StringResources.back));
+        this.addCommand(backCommand);
+        
+        this.addCommandListener(new ActionListener() {
+
+            public void actionPerformed(ActionEvent evt) {
+                if(evt.getCommand().equals(backCommand)) {
+                    MainMenuScreen mainMenuScreen = new MainMenuScreen(MilkProductionScreen.this.midlet, MilkProductionScreen.this.locale);
+                    mainMenuScreen.start();
+                }
+            }
+        });
+    }
+    
+    public void start() {
+        this.show();
+    }
+
+    public void destroy() {
+        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
+    }
+
+    public void pause() {
+        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
+    }
+
+    public void actionPerformed(ActionEvent evt) {
+        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
+    }
+    
+}
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MistroListCellRenderer.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MistroListCellRenderer.java
new file mode 100644
index 0000000..16f2e1d
--- /dev/null
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MistroListCellRenderer.java
@@ -0,0 +1,32 @@
+package org.cgiar.ilri.mistro.farmer.ui;
+
+import com.sun.lwuit.Component;
+import com.sun.lwuit.Label;
+import com.sun.lwuit.List;
+import com.sun.lwuit.list.ListCellRenderer;
+
+/**
+ *
+ * @author jason
+ */
+public class MistroListCellRenderer extends List implements ListCellRenderer{
+
+    private String[] names;
+    
+    public MistroListCellRenderer(String[] names) {
+        super();
+        this.names=names;
+    }
+    public Component getListCellRendererComponent(List list, Object value, int index, boolean isSelected) {
+        Label label = new Label(names[index]);
+        if(isSelected) {
+            label.getStyle().setBgColor(0x2ecc71);
+        }
+        return label;
+    }
+
+    public Component getListFocusComponent(List list) {
+        return this;
+    }
+    
+}
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java
new file mode 100644
index 0000000..211257a
--- /dev/null
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java
@@ -0,0 +1,30 @@
+package org.cgiar.ilri.mistro.farmer.ui;
+
+import com.sun.lwuit.CheckBox;
+import com.sun.lwuit.Component;
+import com.sun.lwuit.Label;
+import com.sun.lwuit.List;
+import com.sun.lwuit.list.ListCellRenderer;
+
+/**
+ *
+ * @author jason
+ */
+public class MultiselectRenderer extends CheckBox implements ListCellRenderer{
+    
+    public MultiselectRenderer() {
+        super();
+    }
+    
+    public Component getListCellRendererComponent(List list, Object value, int index, boolean isSelected) {
+        this.setText(""+value);
+        this.setFocus(isSelected);
+        this.setSelected(isSelected);
+        return this;
+    }
+
+    public Component getListFocusComponent(List list) {
+        return this;
+    }
+    
+}
\ No newline at end of file
-- 
2.7.1

