From 7142b562b3b88f8409a8138418b77c7012a9dc56 Mon Sep 17 00:00:00 2001
From: Jason Rogena <j.rogena@cgiar.org>
Date: Wed, 11 Jun 2014 18:47:28 +0300
Subject: [PATCH 193/213] Version 1.0.1: Admin editing farmers and cows

Working on the ability to edit both farmers and cows
---
 .idea/libraries/support_v4_13_0_0.xml              |  11 --
 MistroFarmer/src/main/AndroidManifest.xml          |  30 ++--
 .../cgiar/ilri/mistro/farmer/AddEventActivity.java |   1 +
 .../mistro/farmer/AddMilkProductionActivity.java   |   1 +
 .../org/cgiar/ilri/mistro/farmer/EditFarmer.java   | 160 +++++++++++++++++++++
 .../cgiar/ilri/mistro/farmer/EventsActivity.java   |   2 +
 .../ilri/mistro/farmer/EventsHistoryActivity.java  |   1 +
 .../cgiar/ilri/mistro/farmer/FarmerSelection.java  |  85 +++++++++++
 .../ilri/mistro/farmer/FertilityActivity.java      |   2 +
 .../cgiar/ilri/mistro/farmer/LandingActivity.java  |  99 ++++++++++++-
 .../org/cgiar/ilri/mistro/farmer/MainMenu.java     |  96 +++++++++++--
 .../farmer/MilkProcutionHistoryActivity.java       |   1 +
 .../ilri/mistro/farmer/MilkProductionActivity.java |   2 +
 .../ilri/mistro/farmer/backend/DataHandler.java    |   3 +
 .../org/cgiar/ilri/mistro/farmer/carrier/Cow.java  |  96 +++++++++++++
 .../cgiar/ilri/mistro/farmer/carrier/Farmer.java   |  23 +++
 .../src/main/res/layout/activity_edit_farmer.xml   | 100 +++++++++++++
 .../main/res/layout/activity_farmer_selection.xml  |  41 ++++++
 .../src/main/res/layout/activity_landing.xml       |   6 +
 .../src/main/res/layout/activity_main_menu.xml     |  37 +++--
 MistroFarmer/src/main/res/menu/edit_farmer.xml     |  30 ++++
 .../src/main/res/menu/farmer_selection.xml         |  32 +++++
 MistroFarmer/src/main/res/values/strings.xml       |   2 +
 MistroFarmer/src/main/res/values/strings_en.xml    |   8 ++
 MistroFarmer/src/main/res/values/strings_kp.xml    |   8 ++
 MistroFarmer/src/main/res/values/strings_kr.xml    |   8 ++
 MistroFarmer/src/main/res/values/strings_lu.xml    |   8 ++
 MistroFarmer/src/main/res/values/strings_nn.xml    |   8 ++
 MistroFarmer/src/main/res/values/strings_sw.xml    |   8 ++
 29 files changed, 863 insertions(+), 46 deletions(-)
 delete mode 100644 .idea/libraries/support_v4_13_0_0.xml
 create mode 100644 MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditFarmer.java
 create mode 100644 MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerSelection.java
 create mode 100644 MistroFarmer/src/main/res/layout/activity_edit_farmer.xml
 create mode 100644 MistroFarmer/src/main/res/layout/activity_farmer_selection.xml
 create mode 100644 MistroFarmer/src/main/res/menu/edit_farmer.xml
 create mode 100644 MistroFarmer/src/main/res/menu/farmer_selection.xml

diff --git a/.idea/libraries/support_v4_13_0_0.xml b/.idea/libraries/support_v4_13_0_0.xml
deleted file mode 100644
index 1a79c30..0000000
--- a/.idea/libraries/support_v4_13_0_0.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<component name="libraryTable">
-  <library name="support-v4-13.0.0">
-    <CLASSES>
-      <root url="jar://$APPLICATION_HOME_DIR$/sdk/extras/android/m2repository/com/android/support/support-v4/13.0.0/support-v4-13.0.0.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES>
-      <root url="jar://$APPLICATION_HOME_DIR$/sdk/extras/android/m2repository/com/android/support/support-v4/13.0.0/support-v4-13.0.0-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
diff --git a/MistroFarmer/src/main/AndroidManifest.xml b/MistroFarmer/src/main/AndroidManifest.xml
index 88b908e..92fc87c 100644
--- a/MistroFarmer/src/main/AndroidManifest.xml
+++ b/MistroFarmer/src/main/AndroidManifest.xml
@@ -1,12 +1,12 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="org.cgiar.ilri.mistro.farmer"
-    android:versionCode="16"
-    android:versionName="0.9.9.7" >
+    android:versionCode="17"
+    android:versionName="1.0.1" >
 
     <uses-sdk
         android:minSdkVersion="7"
-        android:targetSdkVersion="17" /> <!--using target sdk version of 17 because actionbarsherlock uses 17. Otherwise gradle is unable to build project-->
+        android:targetSdkVersion="17" /> <!-- using target sdk version of 17 because actionbarsherlock uses 17. Otherwise gradle is unable to build project -->
 
     <uses-permission android:name="android.permission.READ_PHONE_STATE" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
@@ -56,8 +56,7 @@
             android:name="org.cgiar.ilri.mistro.farmer.MilkProductionActivity"
             android:screenOrientation="portrait" >
         </activity>
-        <activity
-            android:name="org.cgiar.ilri.mistro.farmer.MilkProcutionHistoryActivity" >
+        <activity android:name="org.cgiar.ilri.mistro.farmer.MilkProcutionHistoryActivity" >
         </activity>
         <activity
             android:name="org.cgiar.ilri.mistro.farmer.EventsActivity"
@@ -65,11 +64,10 @@
         </activity>
         <activity
             android:name="org.cgiar.ilri.mistro.farmer.AddEventActivity"
-            android:windowSoftInputMode="stateHidden"
-            android:screenOrientation="portrait" >
+            android:screenOrientation="portrait"
+            android:windowSoftInputMode="stateHidden" >
         </activity>
-        <activity
-            android:name="org.cgiar.ilri.mistro.farmer.EventsHistoryActivity" >
+        <activity android:name="org.cgiar.ilri.mistro.farmer.EventsHistoryActivity" >
         </activity>
         <activity
             android:name="org.cgiar.ilri.mistro.farmer.FertilityActivity"
@@ -77,8 +75,18 @@
         </activity>
         <activity
             android:name="org.cgiar.ilri.mistro.farmer.AddMilkProductionActivity"
-            android:windowSoftInputMode="stateHidden"
-            android:screenOrientation="portrait" >
+            android:screenOrientation="portrait"
+            android:windowSoftInputMode="stateHidden" >
+        </activity>
+        <activity
+            android:name="org.cgiar.ilri.mistro.farmer.EditFarmer"
+            android:screenOrientation="portrait"
+            android:windowSoftInputMode="stateHidden" >
+        </activity>
+        <activity
+            android:name="org.cgiar.ilri.mistro.farmer.FarmerSelection"
+            android:screenOrientation="portrait"
+            android:windowSoftInputMode="stateHidden" >
         </activity>
     </application>
 
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java
index 406e29c..d879a70 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java
@@ -245,6 +245,7 @@ public class AddEventActivity extends SherlockActivity implements MistroActivity
                         clearEditTextDataCache();
 
                         Intent intent = new Intent(AddEventActivity.this, MainMenu.class);
+                        intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_FARMER);
                         intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
                         startActivity(intent);
                     }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java
index dc5db08..ac102f7 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java
@@ -174,6 +174,7 @@ public class AddMilkProductionActivity extends SherlockActivity implements Mistr
                         clearEditTextDataCache();
 
                         Intent intent = new Intent(AddMilkProductionActivity.this, MainMenu.class);
+                        intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_FARMER);
                         intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
                         startActivity(intent);
                     }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditFarmer.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditFarmer.java
new file mode 100644
index 0000000..e5937f6
--- /dev/null
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditFarmer.java
@@ -0,0 +1,160 @@
+package org.cgiar.ilri.mistro.farmer;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.os.Bundle;
+import android.telephony.TelephonyManager;
+import android.view.View;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.Spinner;
+import android.widget.TextView;
+
+import com.actionbarsherlock.app.SherlockActivity;
+import com.actionbarsherlock.view.Menu;
+import com.actionbarsherlock.view.MenuInflater;
+import com.actionbarsherlock.view.MenuItem;
+
+import org.cgiar.ilri.mistro.farmer.backend.DataHandler;
+import org.cgiar.ilri.mistro.farmer.backend.Locale;
+
+import java.util.List;
+
+
+public class EditFarmer extends SherlockActivity implements MistroActivity, View.OnClickListener {
+
+    private Menu menu;
+
+    private TextView fullNameTV;
+    private EditText fullNameET;
+    private TextView preferredLanguageTV;
+    private Spinner preferredLanguageS;
+    private TextView extensionPersonnelTV;
+    private Spinner extensionPersonnelS;
+    private TextView mobileNumberTV;
+    private EditText mobileNumberET;
+    private TextView numberOfCowsTV;
+    private EditText numberOfCowsET;
+    private Button editB;
+
+    private List<String> languages;
+    private boolean cacheData;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_edit_farmer);
+
+        languages = Locale.getAllLanguages(this);
+        cacheData = true;
+
+        fullNameTV=(TextView)this.findViewById(R.id.full_name_tv);
+        fullNameET=(EditText)this.findViewById(R.id.full_name_et);
+        preferredLanguageTV = (TextView)this.findViewById(R.id.preferred_language_tv);
+        preferredLanguageS = (Spinner)this.findViewById(R.id.preferred_language_s);
+        extensionPersonnelTV=(TextView)this.findViewById(R.id.extension_personnel_tv);
+        extensionPersonnelS=(Spinner)this.findViewById(R.id.extension_personnel_s);
+        mobileNumberTV=(TextView)this.findViewById(R.id.mobile_number_tv);
+        mobileNumberET=(EditText)this.findViewById(R.id.mobile_number_et);
+        TelephonyManager telephonyManager=(TelephonyManager)this.getSystemService(Context.TELEPHONY_SERVICE);
+        //Toast.makeText(this,telephonyManager.getSimSerialNumber(),Toast.LENGTH_LONG).show();
+        mobileNumberET.setText(telephonyManager.getLine1Number());
+        numberOfCowsTV=(TextView)this.findViewById(R.id.number_of_cows_tv);
+        numberOfCowsET=(EditText)this.findViewById(R.id.number_of_cows_et);
+        editB=(Button)this.findViewById(R.id.edit_b);
+        editB.setOnClickListener(this);
+
+        //init text according to locale
+        initTextInViews();
+    }
+
+
+    public boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu menu) {
+        MenuInflater inflater = getSupportMenuInflater();
+        inflater.inflate(R.menu.edit_farmer, menu);
+        this.menu = menu;
+        initMenuText();
+        return true;
+    }
+
+    public boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem item) {
+        // Handle item selection
+        if(Language.processLanguageMenuItemSelected(this, this, item)){
+            return true;
+        }
+        else if(item.getItemId() == R.id.action_back_main_menu) {
+            DialogInterface.OnClickListener onClickListener = new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    if(which==DialogInterface.BUTTON_POSITIVE){
+                        dialog.dismiss();
+
+                        clearEditTextDataCache();
+
+                        Intent intent = new Intent(EditFarmer.this, MainMenu.class);
+                        intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_ADMIN);
+                        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
+                        startActivity(intent);
+                    }
+                    else{
+                        dialog.cancel();
+                    }
+                }
+            };
+            AlertDialog mainMenuDialog = Utils.createMainMenuDialog(this, onClickListener);
+            mainMenuDialog.show();
+        }
+        return false;
+    }
+
+    @Override
+    public void initTextInViews() {
+        setTitle(Locale.getStringInLocale("edit_farmer", this));
+        fullNameTV.setText(" * " + Locale.getStringInLocale("full_name", this));
+        extensionPersonnelTV.setText(Locale.getStringInLocale("extension_p", this));
+        mobileNumberTV.setText(" * " + Locale.getStringInLocale("mobile_number", this));
+        numberOfCowsTV.setText(" * "+Locale.getStringInLocale("number_of_cows",this));
+        preferredLanguageTV.setText(" * "+Locale.getStringInLocale("preferred_language", this));
+
+        ArrayAdapter<String> languageAdapter = new ArrayAdapter<String>(this,android.R.layout.simple_spinner_item, languages);
+        languageAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+        preferredLanguageS.setAdapter(languageAdapter);
+
+        editB.setText(Locale.getStringInLocale("edit", this));
+    }
+
+    private void initMenuText(){
+        if(this.menu != null){
+            MenuItem mainMenuMI = menu.findItem(R.id.action_back_main_menu);
+            mainMenuMI.setTitle(Locale.getStringInLocale("back_to_main_menu", this));
+        }
+    }
+
+    private void cacheEditTextData(){
+        if(cacheData) {
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_FULL_NAME, fullNameET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_MOBILE_NUMBER, mobileNumberET.getText().toString());
+        }
+    }
+
+    private void restoreEditTextData(){
+        fullNameET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_FRA_FULL_NAME, ""));
+        mobileNumberET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_FRA_MOBILE_NUMBER, ""));
+    }
+
+    private void clearEditTextDataCache(){
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_FULL_NAME, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_MOBILE_NUMBER, "");
+
+        cacheData = false;
+    }
+
+
+    @Override
+    public void onClick(View v) {
+
+    }
+}
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EventsActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EventsActivity.java
index 7ae875c..7fd4570 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EventsActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EventsActivity.java
@@ -59,6 +59,7 @@ public class EventsActivity extends SherlockActivity implements MistroActivity,
         }
         else if(item.getItemId() == R.id.action_back_main_menu) {
             Intent intent = new Intent(this, MainMenu.class);
+            intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_FARMER);
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
         }
@@ -101,6 +102,7 @@ public class EventsActivity extends SherlockActivity implements MistroActivity,
             sendCachedDataThread.execute(1);
 
             Intent intent = new Intent(this, MainMenu.class);
+            intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_FARMER);
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
         }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EventsHistoryActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EventsHistoryActivity.java
index d6ad9bf..6ef6287 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EventsHistoryActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EventsHistoryActivity.java
@@ -92,6 +92,7 @@ public class EventsHistoryActivity extends SherlockActivity implements MistroAct
         }
         else if(item.getItemId() == R.id.action_back_main_menu) {
             Intent intent = new Intent(this, MainMenu.class);
+            intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_FARMER);
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
         }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerSelection.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerSelection.java
new file mode 100644
index 0000000..78d250f
--- /dev/null
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerSelection.java
@@ -0,0 +1,85 @@
+package org.cgiar.ilri.mistro.farmer;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.Spinner;
+import android.widget.TextView;
+
+import com.actionbarsherlock.app.SherlockActivity;
+import com.actionbarsherlock.view.Menu;
+import com.actionbarsherlock.view.MenuInflater;
+import com.actionbarsherlock.view.MenuItem;
+
+import org.cgiar.ilri.mistro.farmer.backend.Locale;
+
+
+public class FarmerSelection extends SherlockActivity implements MistroActivity, View.OnClickListener {
+
+    private Menu menu;
+
+    private TextView selectFarmerTV;
+    private Spinner selectFarmerS;
+    private Button selectB;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_farmer_selection);
+
+        selectFarmerTV = (TextView)findViewById(R.id.select_farmer_tv);
+        selectFarmerS = (Spinner)findViewById(R.id.select_farmer_s);
+
+        selectB = (Button)findViewById(R.id.select_b);
+        selectB.setOnClickListener(this);
+
+        initTextInViews();
+    }
+
+
+    public boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu menu) {
+        MenuInflater inflater = getSupportMenuInflater();
+        inflater.inflate(R.menu.farmer_selection, menu);
+        this.menu = menu;
+        initMenuText();
+        return true;
+    }
+
+    public boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem item) {
+        // Handle item selection
+        if(Language.processLanguageMenuItemSelected(this, this, item)){
+            return true;
+        }
+        else if(item.getItemId() == R.id.action_back_main_menu) {
+            Intent intent = new Intent(this, MainMenu.class);
+            intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_ADMIN);
+            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
+            startActivity(intent);
+        }
+        return false;
+    }
+
+    @Override
+    public void initTextInViews() {
+        setTitle(Locale.getStringInLocale("select_farmer", this));
+
+        selectFarmerTV.setText(Locale.getStringInLocale("select_farmer", this));
+        selectB.setText(Locale.getStringInLocale("select", this));
+    }
+
+    private void initMenuText(){
+        if(this.menu != null){
+            MenuItem mainMenuMI = menu.findItem(R.id.action_back_main_menu);
+            mainMenuMI.setTitle(Locale.getStringInLocale("back_to_main_menu", this));
+        }
+    }
+
+    @Override
+    public void onClick(View v) {
+        if(v.equals(selectB)){
+            Intent intent = new Intent(this, EditFarmer.class);
+            startActivity(intent);
+        }
+    }
+}
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FertilityActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FertilityActivity.java
index 2e71e52..b32bcdf 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FertilityActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FertilityActivity.java
@@ -65,6 +65,7 @@ public class FertilityActivity extends SherlockActivity implements MistroActivit
         }
         else if(item.getItemId() == R.id.action_back_main_menu) {
             Intent intent = new Intent(this, MainMenu.class);
+            intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_FARMER);
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
         }
@@ -116,6 +117,7 @@ public class FertilityActivity extends SherlockActivity implements MistroActivit
         }
         else if(view == backB){
             Intent intent = new Intent(this, MainMenu.class);
+            intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_FARMER);
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
         }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/LandingActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/LandingActivity.java
index dfa4a7d..4a942c8 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/LandingActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/LandingActivity.java
@@ -14,6 +14,7 @@ import android.telephony.TelephonyManager;
 import android.util.Log;
 import android.view.View;
 import android.widget.Button;
+import android.widget.CheckBox;
 import android.widget.EditText;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -53,6 +54,7 @@ public class LandingActivity extends SherlockActivity implements MistroActivity,
     private String welcomeText;
     private String loadingPleaseWait;
     private String serverError;
+    private CheckBox adminFuncCB;
 
     @Override
     protected void onCreate(Bundle savedInstanceState)
@@ -77,6 +79,8 @@ public class LandingActivity extends SherlockActivity implements MistroActivity,
         TelephonyManager telephonyManager=(TelephonyManager)this.getSystemService(Context.TELEPHONY_SERVICE);
         newMobileNumberET.setText(telephonyManager.getLine1Number());
 
+        adminFuncCB = (CheckBox)this.findViewById(R.id.admin_func_cb);
+
         //init text according to locale
         initTextInViews();
 
@@ -131,6 +135,7 @@ public class LandingActivity extends SherlockActivity implements MistroActivity,
         welcomeText=Locale.getStringInLocale("welcome", this);
         loadingPleaseWait=Locale.getStringInLocale("loading_please_wait", this);
         serverError=Locale.getStringInLocale("problem_connecting_to_server", this);
+        adminFuncCB.setText(Locale.getStringInLocale("admin_functions", this));
     }
 
     private void startRegistrationActivity()
@@ -165,15 +170,28 @@ public class LandingActivity extends SherlockActivity implements MistroActivity,
 
     private void authenticateUser()
     {
-        Log.d(TAG, "Authenticate user called");
         TelephonyManager telephonyManager=(TelephonyManager)this.getSystemService(Context.TELEPHONY_SERVICE);
-        if(telephonyManager.getSimSerialNumber()!=null)
-        {
-            UserAuthenticationThread authenticationThread=new UserAuthenticationThread();
-            authenticationThread.execute(telephonyManager.getSimSerialNumber());
+        if(!adminFuncCB.isChecked()){
+            Log.d(TAG, "Trying to log in as normal farmer");
+            if(telephonyManager.getSimSerialNumber()!=null)
+            {
+                UserAuthenticationThread authenticationThread=new UserAuthenticationThread();
+                authenticationThread.execute(telephonyManager.getSimSerialNumber());
+            }
+            else{
+                Toast.makeText(this,Locale.getStringInLocale("no_sim_card",this),Toast.LENGTH_LONG).show();
+            }
         }
         else{
-            Toast.makeText(this,Locale.getStringInLocale("no_sim_card",this),Toast.LENGTH_LONG).show();
+            Log.d(TAG, "Trying to log in as admin");
+            if(telephonyManager.getSimSerialNumber()!=null)
+            {
+                AdminAuthenticationThread authenticationThread=new AdminAuthenticationThread();
+                authenticationThread.execute(telephonyManager.getSimSerialNumber());
+            }
+            else{
+                Toast.makeText(this,Locale.getStringInLocale("no_sim_card",this),Toast.LENGTH_LONG).show();
+            }
         }
     }
 
@@ -243,6 +261,7 @@ public class LandingActivity extends SherlockActivity implements MistroActivity,
                 Intent intent=new Intent(LandingActivity.this,MainMenu.class);
                 Log.d(TAG, result);
                 intent.putExtra(MainMenu.KEY_FARMER_DATA, result);
+                intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_FARMER);
                 startActivity(intent);
             }
         }
@@ -274,6 +293,74 @@ public class LandingActivity extends SherlockActivity implements MistroActivity,
         }
     }
 
+    private class AdminAuthenticationThread extends AsyncTask<String,Integer,String> {
+        ProgressDialog progressDialog;
+
+        @Override
+        protected void onPreExecute()
+        {
+            super.onPreExecute();
+            loginSessionOn=true;
+            progressDialog= ProgressDialog.show(LandingActivity.this, "",loadingPleaseWait, true);
+
+        }
+
+        @Override
+        protected String doInBackground(String... params)
+        {
+            JSONObject jsonObject=new JSONObject();
+            try
+            {
+                jsonObject.put("simCardSN",params[0]);
+                jsonObject.put("deviceType", "Android");
+                //jsonObject.put("mobileNumber",params[1]);
+                String result = DataHandler.sendDataToServer(LandingActivity.this, jsonObject.toString(),DataHandler.ADMIN_AUTHENTICATION_URL, true);
+                return result;
+            }
+            catch (JSONException e)
+            {
+                e.printStackTrace();
+            }
+            return null;
+        }
+
+        @Override
+        protected void onPostExecute(String result)
+        {
+            super.onPostExecute(result);
+            progressDialog.dismiss();
+            loginSessionOn=false;
+            if(result==null)
+            {
+                String httpError = DataHandler.getSharedPreference(LandingActivity.this, "http_error", "No Error thrown to application. Something must be really wrong");
+                Toast.makeText(LandingActivity.this,httpError,Toast.LENGTH_LONG).show();
+            }
+            else if(result.equals(DataHandler.SMS_ERROR_GENERIC_FAILURE)){
+                Toast.makeText(LandingActivity.this, Locale.getStringInLocale("generic_sms_error", LandingActivity.this), Toast.LENGTH_LONG).show();
+            }
+            else if(result.equals(DataHandler.SMS_ERROR_NO_SERVICE)){
+                Toast.makeText(LandingActivity.this, Locale.getStringInLocale("no_service", LandingActivity.this), Toast.LENGTH_LONG).show();
+            }
+            else if(result.equals(DataHandler.SMS_ERROR_RADIO_OFF)){
+                Toast.makeText(LandingActivity.this, Locale.getStringInLocale("radio_off", LandingActivity.this), Toast.LENGTH_LONG).show();
+            }
+            else if(result.equals(DataHandler.SMS_ERROR_RESULT_CANCELLED)){
+                Toast.makeText(LandingActivity.this, Locale.getStringInLocale("server_not_receive_sms", LandingActivity.this), Toast.LENGTH_LONG).show();
+            }
+            else if(result.equals(DataHandler.CODE_USER_NOT_AUTHENTICATED))
+            {
+                Log.w(TAG, "User trying to log in as admin with an unregistered Sim Card");
+                Toast.makeText(LandingActivity.this, Locale.getStringInLocale("sim_card_not_admin", LandingActivity.this), Toast.LENGTH_LONG).show();
+            }
+            else{
+                Intent intent=new Intent(LandingActivity.this,MainMenu.class);
+                intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_ADMIN);
+                intent.putExtra(MainMenu.KEY_ADMIN_DATA, result);
+                startActivity(intent);
+            }
+        }
+    }
+
     private void registerSimCard()
     {
         if(oldMobileNumberET.getText().toString().length() == 0){
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MainMenu.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MainMenu.java
index 52261b0..76d1eb9 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MainMenu.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MainMenu.java
@@ -24,23 +24,40 @@ import com.actionbarsherlock.view.MenuItem;
 
 import org.cgiar.ilri.mistro.farmer.backend.DataHandler;
 import org.cgiar.ilri.mistro.farmer.backend.Locale;
+import org.cgiar.ilri.mistro.farmer.carrier.Farmer;
+import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
+import java.util.ArrayList;
+import java.util.List;
+import java.util.concurrent.ExecutionException;
+
 public class MainMenu extends SherlockActivity implements MistroActivity, View.OnClickListener, LocationListener
 {
     private static final String TAG="MainMenu";
     public static final String KEY_LONGITUDE = "longitude";
     public static final String KEY_LATITUDE = "latitude";
     public static final String KEY_FARMER_DATA = "farmerData";
+    public static final String KEY_MODE = "mode";
+    public static final String KEY_ADMIN_DATA = "adminData";
+
+    public static final String MODE_FARMER = "isFarmer";
+    public static final String MODE_ADMIN = "isAdmin";
+
     private Button milkProductionB;
     private Button fertilityB;
     private Button eventsB;
+    private Button editFarmerB;
+    private Button editCowB;
     private Button logoutB;
     private JSONObject farmerData;
+    private JSONObject adminData;
     private LocationManager locationManager;
     private String longitude;
     private String latitude;
+
+
     @Override
     protected void onCreate(Bundle savedInstanceState)
     {
@@ -54,21 +71,57 @@ public class MainMenu extends SherlockActivity implements MistroActivity, View.O
         fertilityB.setOnClickListener(this);
         eventsB =(Button)this.findViewById(R.id.events_b);
         eventsB.setOnClickListener(this);
+        editFarmerB = (Button)this.findViewById(R.id.edit_farmer_b);
+        editFarmerB.setOnClickListener(this);
+        editCowB = (Button)this.findViewById(R.id.edit_cow_b);
+        editCowB.setOnClickListener(this);
         logoutB = (Button)this.findViewById(R.id.logout_b);
         logoutB.setOnClickListener(this);
 
         Bundle bundle=this.getIntent().getExtras();
         if(bundle != null){
-            String farmerJSONString = bundle.getString(KEY_FARMER_DATA);
+            String mode = bundle.getString(KEY_MODE);
+            if(mode != null){
+                switchMode(mode);
+                if(mode.equals(MODE_FARMER)){
+                    String farmerJSONString = bundle.getString(KEY_FARMER_DATA);
 
-            try{
-                farmerData = new JSONObject(farmerJSONString);
-                registerCoords();
+                    try{
+                        farmerData = new JSONObject(farmerJSONString);
+                        registerCoords();
 
-                Toast.makeText(this, Locale.getStringInLocale("welcome", this)+" "+farmerData.getString("name"), Toast.LENGTH_LONG).show();
+                        Toast.makeText(this, Locale.getStringInLocale("welcome", this)+" "+farmerData.getString("name"), Toast.LENGTH_LONG).show();
+                    }
+                    catch (Exception e){
+                        e.printStackTrace();
+                    }
+                }
+                else if(mode.equals(MODE_ADMIN)){
+                    String adminJSONString = bundle.getString(KEY_ADMIN_DATA);
+
+                    try{
+                        adminData = new JSONObject(adminJSONString);
+
+                        JSONArray farmerJsonArray = adminData.getJSONArray("farmers");
+
+                        List<Farmer> farmers = new ArrayList<Farmer>(farmerJsonArray.length());
+                        for(int i = 0; i < farmerJsonArray.length(); i++){
+                            Farmer currFarmer = new Farmer(farmerJsonArray.getJSONObject(i), adminData.getString("name"));
+                            farmers.add(currFarmer);
+                        }
+
+                        Toast.makeText(this, Locale.getStringInLocale("welcome", this) + " " + adminData.getString("name") + " (" + Locale.getStringInLocale("admin", this) + ")", Toast.LENGTH_LONG).show();
+                    }
+                    catch (Exception e){
+                        e.printStackTrace();
+                    }
+                }
+                else{
+                    Log.e(TAG, "Unable to find out which mode to use in main menu");
+                }
             }
-            catch (Exception e){
-                e.printStackTrace();
+            else{
+                Log.e(TAG, "Mode is null. Not sure which mode to use");
             }
         }
 
@@ -94,11 +147,30 @@ public class MainMenu extends SherlockActivity implements MistroActivity, View.O
     {
         this.setTitle(Locale.getStringInLocale("main_menu",this));
         milkProductionB.setText(Locale.getStringInLocale("milk_production", this));
-        fertilityB.setText(Locale.getStringInLocale("fertility",this));
+        fertilityB.setText(Locale.getStringInLocale("fertility", this));
         eventsB.setText(Locale.getStringInLocale("events",this));
+        editFarmerB.setText(Locale.getStringInLocale("edit_farmer", this));
+        editCowB.setText(Locale.getStringInLocale("edit_cow", this));
         logoutB.setText(Locale.getStringInLocale("logout", this));
     }
 
+    private void switchMode(String mode){
+        milkProductionB.setVisibility(View.GONE);
+        fertilityB.setVisibility(View.GONE);
+        eventsB.setVisibility(View.GONE);
+        editFarmerB.setVisibility(View.GONE);
+        editCowB.setVisibility(View.GONE);
+        if(mode.equals(MODE_FARMER)){
+            milkProductionB.setVisibility(View.VISIBLE);
+            fertilityB.setVisibility(View.VISIBLE);
+            eventsB.setVisibility(View.VISIBLE);
+        }
+        else if(mode.equals(MODE_ADMIN)){
+            editFarmerB.setVisibility(View.VISIBLE);
+            editCowB.setVisibility(View.VISIBLE);
+        }
+    }
+
     @Override
     public void onClick(View view) {
         sendDataToServer();
@@ -116,6 +188,10 @@ public class MainMenu extends SherlockActivity implements MistroActivity, View.O
             Intent intent=new Intent(this,EventsActivity.class);
             startActivity(intent);
         }
+        else if(view==editFarmerB){
+            Intent intent = new Intent(this, FarmerSelection.class);
+            startActivity(intent);
+        }
         else if(view==logoutB){
             Intent intent = new Intent(this, LandingActivity.class);
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
@@ -207,8 +283,8 @@ public class MainMenu extends SherlockActivity implements MistroActivity, View.O
     public void onLocationChanged(Location location) {
         latitude=String.valueOf(location.getLatitude());
         longitude=String.valueOf(location.getLongitude());
-        Log.d(TAG,"latitude : "+latitude);
-        Log.d(TAG,"longitude : "+longitude);
+        Log.d(TAG, "latitude : " + latitude);
+        Log.d(TAG, "longitude : " + longitude);
     }
 
     @Override
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MilkProcutionHistoryActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MilkProcutionHistoryActivity.java
index fb4b627..4a429bf 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MilkProcutionHistoryActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MilkProcutionHistoryActivity.java
@@ -105,6 +105,7 @@ public class MilkProcutionHistoryActivity extends SherlockActivity implements Mi
         }
         else if(item.getItemId() == R.id.action_back_main_menu) {
             Intent intent = new Intent(this, MainMenu.class);
+            intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_FARMER);
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
         }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MilkProductionActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MilkProductionActivity.java
index 7ae5091..3a6d2f2 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MilkProductionActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MilkProductionActivity.java
@@ -124,6 +124,7 @@ public class MilkProductionActivity extends SherlockActivity implements MistroAc
         }
         else if(item.getItemId() == R.id.action_back_main_menu) {
             Intent intent = new Intent(this, MainMenu.class);
+            intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_FARMER);
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
         }
@@ -215,6 +216,7 @@ public class MilkProductionActivity extends SherlockActivity implements MistroAc
             sendCachedDataThread.execute(1);
 
             Intent intent = new Intent(this, MainMenu.class);
+            intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_FARMER);
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
         }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
index 333384d..cee49ce 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
@@ -86,6 +86,9 @@ public class DataHandler
     public static final String FARMER_FETCH_COW_SERVICING_EVENTS_URL="/php/farmer/fetch_servicing_events.php";
     public static final String FARMER_REGISTER_FARM_COORDS_URL="/php/farmer/register_farm_coords.php";
     public static final String FARMER_ADD_CACHED_DATA_URL="/php/farmer/add_cached_data.php";
+
+    public static final String ADMIN_AUTHENTICATION_URL="/php/admin/authentication.php";
+
     public static final String SP_KEY_LOCALE = "locale";
     public static final String SP_KEY_MILK_QUANTITY_TYPE = "milkQuantityTYpe";
     public static final String SP_KEY_USE_SMS_TO_SEND_DATA = "useSMSToSendData";
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Cow.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Cow.java
index 162d9bc..7f244bf 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Cow.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Cow.java
@@ -102,6 +102,102 @@ public class Cow implements Parcelable, Serializable {
         readFromParcel(in);
     }
 
+    public Cow(JSONArray allCows, int index){
+        try {
+            JSONObject thisCow = allCows.getJSONObject(index);
+            initFromJSON(thisCow);
+
+            int sireID = (thisCow.getString("sire_id").equals("NULL")) ? -1 : thisCow.getInt("sire_id");
+            int damID = (thisCow.getString("dam_id").equals("NULL")) ? -1 : thisCow.getInt("dam_id");
+
+            if(sireID != -1){
+                for(int i = 0; i < allCows.length(); i++){
+                    JSONObject possibleSire = allCows.getJSONObject(i);
+                    if(possibleSire.getInt("id") == sireID){
+                        Sire sire = new Sire();
+                        sire.setName(possibleSire.getString("name"));
+                        sire.setEarTagNumber(possibleSire.getString("ear_tag_number"));
+                        sire.setOwner((possibleSire.getString("owner_name").equals("NULL")) ? "" : possibleSire.getString("owner_name"));
+                        sire.setOwnerType((possibleSire.getString("bull_owner").equals("NULL")) ? "" : possibleSire.getString("owner_name"));
+
+                        this.sire = sire;
+                    }
+                }
+            }
+            this.sire.setStrawNumber((thisCow.getString("straw").equals("NULL")) ? "" : thisCow.getString("straw"));
+
+            if(damID != -1){
+                for(int i = 0; i < allCows.length(); i++){
+                    JSONObject possibleDam = allCows.getJSONObject(i);
+                    if(possibleDam.getInt("id") == damID){
+                        Dam dam = new Dam();
+                        dam.setName(possibleDam.getString("name"));
+                        dam.setEarTagNumber(possibleDam.getString("ear_tag_number"));
+
+                        this.dam = dam;
+                    }
+                }
+            }
+            this.dam.setEmbryoNumber((thisCow.getString("embryo").equals("NULL")) ? "" : thisCow.getString("embryo"));
+        }
+        catch (Exception e){
+            e.printStackTrace();
+        }
+    }
+
+    private void initFromJSON(JSONObject jsonObject){
+        try {
+            name = jsonObject.getString("name");
+            earTagNumber = jsonObject.getString("ear_tag_number");
+            dateOfBirth = (jsonObject.getString("date_of_birth").equals("NULL")) ? "" : jsonObject.getString("date_of_birth");
+            dateAdded = jsonObject.getString("date_added");
+            age = (jsonObject.getString("age").equals("NULL")) ? -1 : jsonObject.getInt("age");
+            ageType = (jsonObject.getString("age_type").equals("NULL")) ? "" : jsonObject.getString("age_type");
+
+            JSONArray breedArray = jsonObject.getJSONArray("breed");
+            this.breeds = new ArrayList<String>(breedArray.length());
+            for(int i = 0; i < breedArray.length(); i++){
+                this.breeds.add(breedArray.getString(i));
+            }
+
+            sex = jsonObject.getString("sex");
+
+            JSONArray deformityArray = jsonObject.getJSONArray("deformity");
+            this.deformities = new ArrayList<String>(deformityArray.length());
+            for(int i = 0; i < deformityArray.length(); i++){
+                this.deformities.add(deformityArray.getString(i));
+            }
+            otherDeformity = jsonObject.getString("other_deformity");
+
+            sire = new Sire();
+            dam = new Dam();
+
+            mode = "";
+            countryOfOrigin = "";//only set this if is sire
+            serviceType = (jsonObject.getString("service_type").equals("NULL")) ? "" : jsonObject.getString("service_type");
+            otherBreed = "";
+            piggyBack = "";
+            this.events = new ArrayList<Event>();
+            this.milkProduction = new ArrayList<MilkProduction>();
+            if(this.sex.equals(SEX_MALE)){
+                milkingStatus = "";
+                inCalf = false;
+            }
+            else if(this.sex.equals(SEX_FEMALE)){
+                milkingStatus = (jsonObject.getString("milking_status").equals("NULL")) ? MILKING_S_ADULT_MILKING : jsonObject.getString("milking_status");
+                if(jsonObject.getString("in_calf").equals("1")){
+                    inCalf = true;
+                }
+                else{
+                    inCalf = false;
+                }
+            }
+        }
+        catch (Exception e){
+            e.printStackTrace();
+        }
+    }
+
     /**
      * This method returns the milking status of cow in english
      *
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
index 596b17f..e3b4417 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
@@ -52,6 +52,29 @@ public class Farmer implements Parcelable, Serializable
         readFromParcel(source);
     }
 
+    public Farmer(JSONObject farmerJsonObject, String extensionPersonnel){
+        try{
+            fullName = farmerJsonObject.getString("name");
+            this.extensionPersonnel = extensionPersonnel;
+            mobileNumber = farmerJsonObject.getString("mobile_no");
+            longitude = farmerJsonObject.getString("longitude");
+            latitude = farmerJsonObject.getString("latitude");
+            simCardSN = farmerJsonObject.getString("sim_card_sn");
+            preferredLocale = farmerJsonObject.getString("pref_locale");
+            isInFarm = false;
+
+            JSONArray cowArray = farmerJsonObject.getJSONArray("cows");
+            cows = new ArrayList<Cow>(cowArray.length());
+            for(int i = 0; i < cowArray.length(); i++){
+                Cow currCow = new Cow(cowArray, i);
+                cows.add(currCow);
+            }
+        }
+        catch (Exception e){
+            e.printStackTrace();
+        }
+    }
+
     public void setFullName(String fullName)
     {
         this.fullName = fullName;
diff --git a/MistroFarmer/src/main/res/layout/activity_edit_farmer.xml b/MistroFarmer/src/main/res/layout/activity_edit_farmer.xml
new file mode 100644
index 0000000..805517c
--- /dev/null
+++ b/MistroFarmer/src/main/res/layout/activity_edit_farmer.xml
@@ -0,0 +1,100 @@
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".FarmerRegistrationActivity">
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:paddingTop="@dimen/activity_padding_top"
+        android:paddingBottom="@dimen/activity_padding_bottom"
+        android:paddingLeft="@dimen/activity_padding_side"
+        android:paddingRight="@dimen/activity_padding_side"
+        android:orientation="vertical">
+
+        <TextView
+            android:id="@+id/full_name_tv"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="10dp"
+            android:textSize="@dimen/normal_text_size"/>
+        <EditText
+            android:id="@+id/full_name_et"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/activity_f_r_edit_text_margin_top"
+            android:layout_marginLeft="@dimen/activity_f_r_edit_text_margin_left"
+            android:textSize="@dimen/normal_text_size"
+            android:textColor="@color/text_input_color"
+            android:inputType="textCapWords|textPersonName"/>
+        <TextView
+            android:id="@+id/mobile_number_tv"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/activity_f_r_text_view_margin_top"
+            android:textSize="@dimen/normal_text_size"/>
+        <EditText
+            android:id="@+id/mobile_number_et"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/activity_f_r_edit_text_margin_top"
+            android:layout_marginLeft="@dimen/activity_f_r_edit_text_margin_left"
+            android:inputType="phone"
+            android:textColor="@color/text_input_color"
+            android:textSize="@dimen/normal_text_size"/>
+        <TextView
+            android:id="@+id/preferred_language_tv"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/activity_f_r_text_view_margin_top"
+            android:textSize="@dimen/normal_text_size"/>
+        <Spinner
+            android:id="@+id/preferred_language_s"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/activity_f_r_edit_text_margin_top"
+            android:layout_marginLeft="@dimen/activity_f_r_edit_text_margin_left"
+            android:textSize="@dimen/normal_text_size"
+            android:textColor="@color/text_input_color" />
+        <TextView
+            android:id="@+id/extension_personnel_tv"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/activity_f_r_text_view_margin_top"
+            android:textSize="@dimen/normal_text_size"/>
+        <Spinner
+            android:id="@+id/extension_personnel_s"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/activity_f_r_edit_text_margin_top"
+            android:layout_marginLeft="@dimen/activity_f_r_edit_text_margin_left"
+            android:textSize="@dimen/normal_text_size"
+            android:textColor="@color/text_input_color" />
+        <TextView
+            android:id="@+id/number_of_cows_tv"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/activity_f_r_text_view_margin_top"
+            android:textSize="@dimen/normal_text_size"/>
+        <EditText
+            android:id="@+id/number_of_cows_et"
+            android:layout_width="120dp"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/activity_f_r_edit_text_margin_top"
+            android:layout_marginLeft="@dimen/activity_f_r_edit_text_margin_left"
+            android:inputType="number"
+            android:gravity="center_horizontal"
+            android:textColor="@color/text_input_color"
+            android:textSize="@dimen/normal_text_size"/>
+        <Button
+            android:id="@+id/edit_b"
+            android:layout_width="wrap_content"
+            android:layout_height="@dimen/normal_button_layout_height"
+            android:layout_marginTop="15dp"
+            android:layout_gravity="bottom|right"
+            android:paddingLeft="@dimen/normal_button_padding_side"
+            android:paddingRight="@dimen/normal_button_padding_side"
+            android:textSize="@dimen/normal_text_size"/>
+    </LinearLayout>
+</ScrollView>
+
diff --git a/MistroFarmer/src/main/res/layout/activity_farmer_selection.xml b/MistroFarmer/src/main/res/layout/activity_farmer_selection.xml
new file mode 100644
index 0000000..9389a92
--- /dev/null
+++ b/MistroFarmer/src/main/res/layout/activity_farmer_selection.xml
@@ -0,0 +1,41 @@
+<ScrollView  xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <LinearLayout 
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:paddingLeft="@dimen/activity_horizontal_margin"
+        android:paddingRight="@dimen/activity_horizontal_margin"
+        android:paddingTop="@dimen/activity_vertical_margin"
+        android:paddingBottom="@dimen/activity_vertical_margin"
+        tools:context=".MainMenu">
+        <TextView
+            android:id="@+id/select_farmer_tv"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textSize="@dimen/normal_text_size"/>
+
+
+        <Spinner
+            android:id="@+id/select_farmer_s"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/activity_f_r_edit_text_margin_top"
+            android:layout_marginLeft="@dimen/activity_f_r_edit_text_margin_left"
+            android:textSize="@dimen/normal_text_size"
+            android:textColor="@color/text_input_color" />
+
+        <Button
+            android:id="@+id/select_b"
+            android:layout_width="wrap_content"
+            android:layout_height="@dimen/normal_button_layout_height"
+            android:layout_marginTop="15dp"
+            android:layout_gravity="bottom|right"
+            android:paddingLeft="@dimen/normal_button_padding_side"
+            android:paddingRight="@dimen/normal_button_padding_side"
+            android:textSize="@dimen/normal_text_size"/>
+    </LinearLayout>
+
+</ScrollView>
\ No newline at end of file
diff --git a/MistroFarmer/src/main/res/layout/activity_landing.xml b/MistroFarmer/src/main/res/layout/activity_landing.xml
index 73f8b5f..8894ca2 100644
--- a/MistroFarmer/src/main/res/layout/activity_landing.xml
+++ b/MistroFarmer/src/main/res/layout/activity_landing.xml
@@ -18,4 +18,10 @@
         android:layout_width="match_parent"
         android:layout_marginTop="20dp"/>
 
+    <CheckBox
+        android:id="@+id/admin_func_cb"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="40dp" />
+
 </LinearLayout>
\ No newline at end of file
diff --git a/MistroFarmer/src/main/res/layout/activity_main_menu.xml b/MistroFarmer/src/main/res/layout/activity_main_menu.xml
index 6a4de86..d66c395 100644
--- a/MistroFarmer/src/main/res/layout/activity_main_menu.xml
+++ b/MistroFarmer/src/main/res/layout/activity_main_menu.xml
@@ -14,21 +14,42 @@
         android:layout_height="@dimen/normal_button_layout_height"
         android:layout_marginTop="30dp"
         android:paddingLeft="@dimen/normal_button_padding_side"
-        android:paddingRight="@dimen/normal_button_padding_side"/>
+        android:paddingRight="@dimen/normal_button_padding_side"
+        android:visibility="gone"/>
     <Button
         android:id="@+id/fertility_b"
         android:layout_width="match_parent"
         android:layout_height="@dimen/normal_button_layout_height"
         android:layout_marginTop="30dp"
         android:paddingLeft="@dimen/normal_button_padding_side"
-        android:paddingRight="@dimen/normal_button_padding_side"/>
+        android:paddingRight="@dimen/normal_button_padding_side"
+        android:visibility="gone"/>
     <Button
-            android:id="@+id/events_b"
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/normal_button_layout_height"
-            android:layout_marginTop="30dp"
-            android:paddingLeft="@dimen/normal_button_padding_side"
-            android:paddingRight="@dimen/normal_button_padding_side"/>
+        android:id="@+id/events_b"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/normal_button_layout_height"
+        android:layout_marginTop="30dp"
+        android:paddingLeft="@dimen/normal_button_padding_side"
+        android:paddingRight="@dimen/normal_button_padding_side"
+        android:visibility="gone"/>
+
+    <Button
+        android:id="@+id/edit_farmer_b"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/normal_button_layout_height"
+        android:layout_marginTop="30dp"
+        android:paddingLeft="@dimen/normal_button_padding_side"
+        android:paddingRight="@dimen/normal_button_padding_side"
+        android:visibility="gone"/>
+    <Button
+        android:id="@+id/edit_cow_b"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/normal_button_layout_height"
+        android:layout_marginTop="30dp"
+        android:paddingLeft="@dimen/normal_button_padding_side"
+        android:paddingRight="@dimen/normal_button_padding_side"
+        android:visibility="gone"/>
+
     <Button
         android:id="@+id/logout_b"
         android:layout_width="@dimen/back_button_width"
diff --git a/MistroFarmer/src/main/res/menu/edit_farmer.xml b/MistroFarmer/src/main/res/menu/edit_farmer.xml
new file mode 100644
index 0000000..06f9367
--- /dev/null
+++ b/MistroFarmer/src/main/res/menu/edit_farmer.xml
@@ -0,0 +1,30 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:id="@+id/action_english"
+        android:title="@string/english"
+        android:orderInCategory="1"
+        android:showAsAction="never" />
+    <item android:id="@+id/action_swahili"
+        android:title="@string/swahili"
+        android:orderInCategory="5"
+        android:showAsAction="never" />
+    <item android:id="@+id/action_nandi"
+        android:title="@string/nandi"
+        android:orderInCategory="2"
+        android:showAsAction="never" />
+    <item android:id="@+id/action_kikabras"
+        android:title="@string/kikabrasi"
+        android:orderInCategory="3"
+        android:showAsAction="never" />
+    <item android:id="@+id/action_lutsotso"
+        android:title="@string/lutsotso"
+        android:orderInCategory="4"
+        android:showAsAction="never" />
+    <item android:id="@+id/action_kipsigis"
+        android:title="@string/kipsigis"
+        android:orderInCategory="6"
+        android:showAsAction="never" />
+
+    <item android:id="@+id/action_back_main_menu"
+        android:orderInCategory="7"
+        android:showAsAction="never" />
+</menu>
diff --git a/MistroFarmer/src/main/res/menu/farmer_selection.xml b/MistroFarmer/src/main/res/menu/farmer_selection.xml
new file mode 100644
index 0000000..b3828af
--- /dev/null
+++ b/MistroFarmer/src/main/res/menu/farmer_selection.xml
@@ -0,0 +1,32 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:id="@+id/action_english"
+        android:title="@string/english"
+        android:orderInCategory="1"
+        android:showAsAction="never" />
+    <item android:id="@+id/action_swahili"
+        android:title="@string/swahili"
+        android:orderInCategory="5"
+        android:showAsAction="never" />
+    <item android:id="@+id/action_nandi"
+        android:title="@string/nandi"
+        android:orderInCategory="2"
+        android:showAsAction="never" />
+    <item android:id="@+id/action_kikabras"
+        android:title="@string/kikabrasi"
+        android:orderInCategory="3"
+        android:showAsAction="never" />
+    <item android:id="@+id/action_lutsotso"
+        android:title="@string/lutsotso"
+        android:orderInCategory="4"
+        android:showAsAction="never" />
+    <item android:id="@+id/action_kipsigis"
+        android:title="@string/kipsigis"
+        android:orderInCategory="6"
+        android:showAsAction="never" />
+
+
+
+    <item android:id="@+id/action_back_main_menu"
+        android:orderInCategory="7"
+        android:showAsAction="never" />
+</menu>
\ No newline at end of file
diff --git a/MistroFarmer/src/main/res/values/strings.xml b/MistroFarmer/src/main/res/values/strings.xml
index 8c21602..95eb15d 100644
--- a/MistroFarmer/src/main/res/values/strings.xml
+++ b/MistroFarmer/src/main/res/values/strings.xml
@@ -20,5 +20,7 @@
     <string name="kikabrasi">Kikabrasi</string>
     <string name="title_activity_fertility">Fertility</string>
     <string name="title_activity_add_milk_production">Add Milk Production</string>
+    <string name="title_activity_edit_farmer">Edit Farmer</string>
+    <string name="title_activity_edit_farmer_selection">EditFarmerSelection</string>
 
 </resources>
\ No newline at end of file
diff --git a/MistroFarmer/src/main/res/values/strings_en.xml b/MistroFarmer/src/main/res/values/strings_en.xml
index fddba32..f5e79af 100644
--- a/MistroFarmer/src/main/res/values/strings_en.xml
+++ b/MistroFarmer/src/main/res/values/strings_en.xml
@@ -311,4 +311,12 @@
     <string name="phone_number_not_valid_en">The phone number you entered is not valid</string>
     <string name="enter_old_phone_no_en">Please enter your old phone number</string>
     <string name="enter_new_phone_no_en">Please enter your new phone number</string>
+    <string name="admin_functions_en">Admin Functions</string>
+    <string name="sim_card_not_admin_en">The sim card you are using is not allowed to log in as Admin</string>
+    <string name="edit_farmer_en">Edit Farmer</string>
+    <string name="edit_cow_en">Edit Cow</string>
+    <string name="admin_en">Admin</string>
+    <string name="edit_en">Edit</string>
+    <string name="select_farmer_en">Select a farmer</string>
+    <string name="select_en">Select</string>
 </resources>
diff --git a/MistroFarmer/src/main/res/values/strings_kp.xml b/MistroFarmer/src/main/res/values/strings_kp.xml
index 97892f4..9dd226b 100644
--- a/MistroFarmer/src/main/res/values/strings_kp.xml
+++ b/MistroFarmer/src/main/res/values/strings_kp.xml
@@ -309,4 +309,12 @@
     <string name="phone_number_not_valid_kp">The phone number you entered is not valid</string>
     <string name="enter_old_phone_no_kp">Please enter your old phone number</string>
     <string name="enter_new_phone_no_kp">Please enter your new phone number</string>
+    <string name="admin_functions_kp">Admin Functions</string>
+    <string name="sim_card_not_admin_kp">The sim card you are using is not allowed to log in as Admin</string>
+    <string name="edit_farmer_kp">Edit Farmer</string>
+    <string name="edit_cow_kp">Edit Cow</string>
+    <string name="admin_kp">Admin</string>
+    <string name="edit_kp">Edit</string>
+    <string name="select_farmer_kp">Select a farmer</string>
+    <string name="select_kp">Select</string>
 </resources>
diff --git a/MistroFarmer/src/main/res/values/strings_kr.xml b/MistroFarmer/src/main/res/values/strings_kr.xml
index 4af0235..5562adb 100644
--- a/MistroFarmer/src/main/res/values/strings_kr.xml
+++ b/MistroFarmer/src/main/res/values/strings_kr.xml
@@ -308,4 +308,12 @@
     <string name="phone_number_not_valid_kr">The phone number you entered is not valid</string>
     <string name="enter_old_phone_no_kr">Please enter your old phone number</string>
     <string name="enter_new_phone_no_kr">Please enter your new phone number</string>
+    <string name="admin_functions_kr">Admin Functions</string>
+    <string name="sim_card_not_admin_kr">The sim card you are using is not allowed to log in as Admin</string>
+    <string name="edit_farmer_kr">Edit Farmer</string>
+    <string name="edit_cow_kr">Edit Cow</string>
+    <string name="admin_kr">Admin</string>
+    <string name="edit_kr">Edit</string>
+    <string name="select_farmer_kr">Select a farmer</string>
+    <string name="select_kr">Select</string>
 </resources>
\ No newline at end of file
diff --git a/MistroFarmer/src/main/res/values/strings_lu.xml b/MistroFarmer/src/main/res/values/strings_lu.xml
index aa70b94..27d6f60 100644
--- a/MistroFarmer/src/main/res/values/strings_lu.xml
+++ b/MistroFarmer/src/main/res/values/strings_lu.xml
@@ -311,4 +311,12 @@
     <string name="phone_number_not_valid_lu">The phone number you entered is not valid</string>
     <string name="enter_old_phone_no_lu">Please enter your old phone number</string>
     <string name="enter_new_phone_no_lu">Please enter your new phone number</string>
+    <string name="admin_functions_lu">Admin Functions</string>
+    <string name="sim_card_not_admin_lu">The sim card you are using is not allowed to log in as Admin</string>
+    <string name="edit_farmer_lu">Edit Farmer</string>
+    <string name="edit_cow_lu">Edit Cow</string>
+    <string name="admin_lu">Admin</string>
+    <string name="edit_lu">Edit</string>
+    <string name="select_farmer_lu">Select a farmer</string>
+    <string name="select_lu">Select</string>
 </resources>
diff --git a/MistroFarmer/src/main/res/values/strings_nn.xml b/MistroFarmer/src/main/res/values/strings_nn.xml
index 0464f3f..c0a8fad 100644
--- a/MistroFarmer/src/main/res/values/strings_nn.xml
+++ b/MistroFarmer/src/main/res/values/strings_nn.xml
@@ -309,4 +309,12 @@
     <string name="phone_number_not_valid_nn">The phone number you entered is not valid</string>
     <string name="enter_old_phone_no_nn">Please enter your old phone number</string>
     <string name="enter_new_phone_no_nn">Please enter your new phone number</string>
+    <string name="admin_functions_nn">Admin Functions</string>
+    <string name="sim_card_not_admin_nn">The sim card you are using is not allowed to log in as Admin</string>
+    <string name="edit_farmer_nn">Edit Farmer</string>
+    <string name="edit_cow_nn">Edit Cow</string>
+    <string name="admin_nn">Admin</string>
+    <string name="edit_nn">Edit</string>
+    <string name="select_farmer_nn">Select a farmer</string>
+    <string name="select_nn">Select</string>
 </resources>
diff --git a/MistroFarmer/src/main/res/values/strings_sw.xml b/MistroFarmer/src/main/res/values/strings_sw.xml
index 11a34e4..853a8dc 100644
--- a/MistroFarmer/src/main/res/values/strings_sw.xml
+++ b/MistroFarmer/src/main/res/values/strings_sw.xml
@@ -309,4 +309,12 @@
     <string name="phone_number_not_valid_sw">The phone number you entered is not valid</string>
     <string name="enter_old_phone_no_sw">Please enter your old phone number</string>
     <string name="enter_new_phone_no_sw">Please enter your new phone number</string>
+    <string name="admin_functions_sw">Admin Functions</string>
+    <string name="sim_card_not_admin_sw">The sim card you are using is not allowed to log in as Admin</string>
+    <string name="edit_farmer_sw">Edit Farmer</string>
+    <string name="edit_cow_sw">Edit Cow</string>
+    <string name="admin_sw">Admin</string>
+    <string name="edit_sw">Edit</string>
+    <string name="select_farmer_sw">Select a farmer</string>
+    <string name="select_sw">Select</string>
 </resources>
-- 
2.7.1

