From cd70866f8c9f4e3901d29fd8c377a3d462beabbb Mon Sep 17 00:00:00 2001
From: Jason Rogena <jasonrogena@gmail.com>
Date: Wed, 30 Oct 2013 09:42:56 +0300
Subject: [PATCH 096/213] Cow and farmer details saved into objects.

---
 .../org/cgiar/ilri/mistro/farmer/carrier/Cow.java  |   9 +-
 .../cgiar/ilri/mistro/farmer/ui/ComboBoxItem.java  |   5 +
 .../mistro/farmer/ui/CowRegistrationScreen.java    | 158 ++++++++++++++++++---
 .../ilri/mistro/farmer/ui/MultiselectRenderer.java |   8 ++
 .../farmer/ui/localization/StringResources.java    |   4 +-
 5 files changed, 159 insertions(+), 25 deletions(-)

diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/carrier/Cow.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/carrier/Cow.java
index b4321c6..3571619 100644
--- a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/carrier/Cow.java
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/carrier/Cow.java
@@ -1,6 +1,5 @@
 package org.cgiar.ilri.mistro.farmer.carrier;
 
-import java.io.Serializable;
 import java.util.Calendar;
 import java.util.Date;
 import org.json.me.JSONArray;
@@ -37,6 +36,7 @@ public class Cow {
     private String serviceType;
     private String otherDeformity;
     private String piggyBack;
+    private Date dateOfBirthDate;
 
     public Cow(boolean isNotDamOrSire) {
         name = "";
@@ -71,6 +71,7 @@ public class Cow {
     }
 
     public void setDateOfBirth(Date dateOfBirth) {
+        this.dateOfBirthDate = dateOfBirth;
         Calendar calendar  = Calendar.getInstance();
         calendar.setTime(dateOfBirth);
         StringBuffer dateStringBuffer = new StringBuffer();
@@ -139,6 +140,12 @@ public class Cow {
     public String getDateOfBirth() {
         return dateOfBirth;
     }
+    
+    public long getDateOfBirthMilliseconds() {
+        if(dateOfBirthDate != null)
+            return dateOfBirthDate.getTime();
+        else return -1;
+    }
 
     public int getAge() {
         return age;
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/ComboBoxItem.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/ComboBoxItem.java
index 27b1de5..e97eadf 100644
--- a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/ComboBoxItem.java
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/ComboBoxItem.java
@@ -34,5 +34,10 @@ public class ComboBoxItem extends CheckBox{
         this.checked = !checked;
         this.setSelected(checked);
     }
+    
+    public void setChecked(){
+        this.checked = true;
+        this.setSelected(true);
+    }
 }
 
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java
index 3b9f96b..ae4f7a7 100644
--- a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/CowRegistrationScreen.java
@@ -53,8 +53,8 @@ public class CowRegistrationScreen extends Form implements Screen{
     private TextField ageTF;
     private Label ageTypeL;
     private ComboBox ageTypeCB;
-    private Label dateOfBirthL;
-    private Spinner dateOfBirthS;
+    //private Label dateOfBirthL;
+    //private Spinner dateOfBirthS;
     private Label breedL;
     private ComboBox breedCB;
     private MultiselectRenderer breedMultiselectRenderer;
@@ -153,14 +153,14 @@ public class CowRegistrationScreen extends Form implements Screen{
         ageTypeCB.setRenderer(new MistroListCellRenderer(Locale.getStringArrayInLocale(locale, ArrayResources.age_type_array)));
         this.addComponent(ageTypeCB);
         
-        dateOfBirthL = new Label(Locale.getStringInLocale(locale, StringResources.date_of_birth));
+        /*dateOfBirthL = new Label(Locale.getStringInLocale(locale, StringResources.date_of_birth));
         setLabelStyle(dateOfBirthL);
-        this.addComponent(dateOfBirthL);
+        this.addComponent(dateOfBirthL);*/
         
-        dateOfBirthS = Spinner.createDate(System.currentTimeMillis() - (31536000730l*50), System.currentTimeMillis(), System.currentTimeMillis(), '/', Spinner.DATE_FORMAT_DD_MM_YYYY);
+        /*dateOfBirthS = Spinner.createDate(System.currentTimeMillis() - (31536000730l*50), System.currentTimeMillis(), System.currentTimeMillis(), '/', Spinner.DATE_FORMAT_DD_MM_YYYY);
         setComponentStyle(dateOfBirthS, true);
         dateOfBirthS.getSelectedStyle().setFgColor(0x2ecc71);
-        this.addComponent(dateOfBirthS);
+        this.addComponent(dateOfBirthS);*/
         
         breedL = new Label(Locale.getStringInLocale(locale, StringResources.breed));
         setLabelStyle(breedL);
@@ -207,21 +207,23 @@ public class CowRegistrationScreen extends Form implements Screen{
         setLabelStyle(sireL);
         this.addComponent(sireL);
         
-        sireCB = new ComboBox(getValidSires());
+        String[] sireNames = getValidSires();
+        sireCB = new ComboBox(sireNames);
         setComponentStyle(sireCB, true);
-        sireCB.setRenderer(new MistroListCellRenderer(new String[]{" "}));
+        sireCB.setRenderer(new MistroListCellRenderer(sireNames));
         this.addComponent(sireCB);
         
         damL = new Label(Locale.getStringInLocale(locale, StringResources.dam));
         setLabelStyle(damL);
         this.addComponent(damL);
         
-        damCB = new ComboBox(getValidDams());
+        String[] damNames = getValidDams();
+        damCB = new ComboBox(damNames);
         setComponentStyle(damCB, true);
-        damCB.setRenderer(new MistroListCellRenderer(new String[]{" "}));
+        damCB.setRenderer(new MistroListCellRenderer(damNames));
         this.addComponent(damCB);
         
-        countryL = new Label(Locale.getStringInLocale(locale, StringResources.country_of_origin));
+        countryL = new Label(Locale.getStringInLocale(locale, StringResources.sire_country_of_origin));
         setLabelStyle(countryL);
         this.addComponent(countryL);
         
@@ -282,7 +284,7 @@ public class CowRegistrationScreen extends Form implements Screen{
         }
         String[] ageTypesInEN = Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.age_type_array);
         thisCow.setAgeType(ageTypesInEN[ageTypeCB.getSelectedIndex()]);
-        thisCow.setDateOfBirth((Date) dateOfBirthS.getValue());
+        //thisCow.setDateOfBirth((Date) dateOfBirthS.getValue());
         thisCow.setBreeds(breedMultiselectRenderer.getSelectedItems());
         String[] sexInEN = Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.sex_array);
         thisCow.setSex(sexInEN[sexCB.getSelectedIndex()]);
@@ -294,7 +296,6 @@ public class CowRegistrationScreen extends Form implements Screen{
         Cow selectedSire = (Cow)validSires.elementAt(sireCB.getSelectedIndex());
         sire.setName(selectedSire.getName());
         sire.setEarTagNumber(selectedSire.getEarTagNumber());
-        thisCow.setSire(sire);
         
         Dam dam = new Dam();
         Cow selectedDam = (Cow)validDams.elementAt(damCB.getSelectedIndex());
@@ -302,8 +303,10 @@ public class CowRegistrationScreen extends Form implements Screen{
         dam.setEarTagNumber(selectedDam.getEarTagNumber());
         thisCow.setDam(dam);
         
+        //set country of origin to sire not this cow
         String[] countries = GeneralArrays.all_countries;
-        thisCow.setCountryOfOrigin(countries[countryCB.getSelectedIndex()]);
+        sire.setCountryOfOrigin(countries[countryCB.getSelectedIndex()]);
+        thisCow.setSire(sire);
     }
     
     private void restoreCowDetails() {
@@ -311,30 +314,137 @@ public class CowRegistrationScreen extends Form implements Screen{
         
         cowNameTF.setText(thisCow.getName());
         earTagNumberTF.setText(thisCow.getEarTagNumber());
-        ageTF.setText(String.valueOf(thisCow.getAge()));
+        if(thisCow.getAge()!=-1)
+            ageTF.setText(String.valueOf(thisCow.getAge()));
         String[] ageTypesInEN = Locale.getStringArrayInLocale(Locale.LOCALE_EN, ArrayResources.age_type_array);
         for(int i = 0; i < ageTypesInEN.length; i ++) {
             if(ageTypesInEN[i].equals(thisCow.getAgeType())){
                 ageTypeCB.setSelectedIndex(i);
             }
         }
-        //TODO: set date of birth
         
+        /*long dateOfBirthLong = thisCow.getDateOfBirthMilliseconds();
+        if(dateOfBirthLong != -1){
+            dateOfBirthS.setValue(new Long(dateOfBirthLong));//TODO: not sure this will work
+        }
+        else{
+            dateOfBirthS.setValue(new Long(System.currentTimeMillis()));
+        }*/
+        
+        String[] breedsInEN = Locale.getStringArrayInLocale(locale, ArrayResources.breeds_array);
+        //for each breed, check if breed in cow's breed array
+        String[] cowBreeds = thisCow.getBreeds();
+        int noSelectedBreeds = 0;
+        if(cowBreeds!=null){
+            for(int i = 0; i < breedsInEN.length; i++) {
+                for(int j = 0; j < cowBreeds.length; j++) {
+                    if(cowBreeds[j].equals(breedsInEN[i])){
+                        noSelectedBreeds++;
+                    }
+                }
+            }
+            int[] cowBreedsIndexes = new int[noSelectedBreeds];
+            int count=0;
+            for(int i = 0; i < breedsInEN.length; i++) {
+                for(int j = 0; j < cowBreeds.length; j++) {
+                    if(cowBreeds[j].equals(breedsInEN[i])){
+                        cowBreedsIndexes[count] = i;
+                        count++;
+                    }
+                }
+            }
+            if(cowBreedsIndexes.length > 0)
+                breedMultiselectRenderer.setSelectedItems(cowBreedsIndexes);
+        }
+        
+        
+        String[] sexInEN = Locale.getStringArrayInLocale(locale, ArrayResources.sex_array);
+        for(int i = 0; i < sexInEN.length; i++){
+            if(sexInEN[i].equals(thisCow.getSex())){
+                sexCB.setSelectedIndex(i);
+            }
+        }
+        
+        String[] deformitiesInEN = Locale.getStringArrayInLocale(locale, ArrayResources.deformities_array);
+        String[] cowDeformities = thisCow.getDeformities();
+        int noDeformities = 0;
+        if(cowDeformities!=null){
+            for(int i = 0; i < deformitiesInEN.length; i++ ){
+                for(int j = 0; j < cowDeformities.length; j++){
+                    if(deformitiesInEN[i].equals(cowDeformities[j])){
+                        noDeformities++;
+                    }
+                }
+            }
+            int[] cowDeformitiesIndexes = new int[noDeformities];
+            int count = 0;
+            for(int i = 0; i < deformitiesInEN.length; i++ ){
+                for(int j = 0; j < cowDeformities.length; j++){
+                    if(deformitiesInEN[i].equals(cowDeformities[j])){
+                        cowDeformitiesIndexes[count] = i;
+                        count++;
+                    }
+                }
+            }
+            if(cowDeformitiesIndexes.length>0)
+                deformityMultiselectRenderer.setSelectedItems(cowDeformitiesIndexes);
+        }
+        
+        String[] serviceTypesInEN = Locale.getStringArrayInLocale(locale, ArrayResources.service_types);
+        for(int i =0; i < serviceTypesInEN.length; i++){
+            if(serviceTypesInEN[i].equals(thisCow.getServiceType())){
+                serviceTypeCB.setSelectedIndex(i);
+            }
+        }
+        
+        Sire cowSire = thisCow.getSire();
+        if(cowSire != null) {
+            for(int i = 0; i < validSires.size(); i++){
+                Cow currentSire = (Cow)validSires.elementAt(i);
+                if(currentSire.getName().equals(cowSire.getName()) && currentSire.getEarTagNumber().equals(cowSire.getEarTagNumber())){
+                    sireCB.setSelectedIndex(i);
+                }
+            }
+        }
+        
+        Dam cowDam = thisCow.getDam();
+        if(cowDam != null) {
+            for(int i = 0; i < validDams.size(); i++){
+                Cow currentDam = (Cow)validDams.elementAt(i);
+                if(currentDam.getName().equals(cowDam.getName()) && currentDam.getEarTagNumber().equals(cowDam.getEarTagNumber())){
+                    sireCB.setSelectedIndex(i);
+                }
+            }
+        }
+        
+        //set countryCB to sire's country of origin
+        if(cowSire!=null){
+            String[] countries = GeneralArrays.all_countries;
+            for(int i = 0; i<countries.length;i++){
+                if(countries[i].equals(cowSire.getCountryOfOrigin())){
+                    countryCB.setSelectedIndex(i);
+                }
+            }
+        }
     }
     
     private String[] getValidSires() {
         Cow[] allCows = farmer.getCows();
         
-        validSires = new Vector();
+        validSires = new Vector(allCows.length);
+        validSireNames = new Vector(allCows.length);
         //add placibo
         validSires.addElement(new Cow(true));
-        validSireNames.addElement("");
+        validSireNames.addElement(" ");
         
         for(int i = 0;i < allCows.length; i++) {
             Cow currentCow = allCows[i];
             if(i != cowIndex && currentCow.getEarTagNumber() != null && currentCow.getEarTagNumber().length() > 0 && currentCow.getSex().equals(Cow.SEX_MALE)) {
                 validSires.addElement(currentCow);
-                validSireNames.addElement(currentCow.getEarTagNumber()+" ("+currentCow.getName()+")");
+                if(currentCow.getName()!= null && currentCow.getName().trim().length() > 0)
+                    validSireNames.addElement((currentCow.getEarTagNumber()+" ("+currentCow.getName()+")"));
+                else
+                    validSireNames.addElement(currentCow.getEarTagNumber());
             }
         }
         
@@ -349,16 +459,20 @@ public class CowRegistrationScreen extends Form implements Screen{
     private String[] getValidDams() {
         Cow[] allCows = farmer.getCows();
         
-        validDams = new Vector();
+        validDams = new Vector(allCows.length);
+        validDamNames = new Vector(allCows.length);
         //add placibo
         validDams.addElement(new Cow(true));
-        validDamNames.addElement("");
+        validDamNames.addElement(" ");
         
         for(int i = 0;i < allCows.length; i++) {
             Cow currentCow = allCows[i];
             if(i != cowIndex && currentCow.getEarTagNumber() != null && currentCow.getEarTagNumber().length() > 0 && currentCow.getSex().equals(Cow.SEX_FEMALE)) {
                 validDams.addElement(currentCow);
-                validDamNames.addElement(currentCow.getEarTagNumber()+" ("+currentCow.getName()+")");
+                if(currentCow.getName()!= null && currentCow.getName().trim().length() > 0)
+                    validDamNames.addElement((currentCow.getEarTagNumber()+" ("+currentCow.getName()+")"));
+                else
+                    validDamNames.addElement((currentCow.getEarTagNumber()));
             }
         }
         
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java
index fb944bc..f3e7d2c 100644
--- a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/MultiselectRenderer.java
@@ -89,4 +89,12 @@ public class MultiselectRenderer implements ListCellRenderer, ActionListener{
         }
         return result;
     }
+    
+    public void setSelectedItems(int[] itemIndexes) {
+        for(int i = 0; i < itemIndexes.length; i++){
+            ComboBoxItem currentItem = (ComboBoxItem)comboBoxItems.elementAt(itemIndexes[i]);
+            currentItem.setChecked();
+            //comboBoxItems.setElementAt(currentItem, i);
+        }
+    }
 }
\ No newline at end of file
diff --git a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/localization/StringResources.java b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/localization/StringResources.java
index 10d86cd..192c43b 100644
--- a/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/localization/StringResources.java
+++ b/JavaME/MistroFarmer/MistroFarmer/src/org/cgiar/ilri/mistro/farmer/ui/localization/StringResources.java
@@ -113,8 +113,8 @@ public class StringResources {
         "A maximum of four breeds",
         ""
     };
-    public static final String[] country_of_origin = {
-        "Country of Origin",
+    public static final String[] sire_country_of_origin = {
+        "Sire's Country of Origin",
         ""
     };
     public static final String[] specify = {
-- 
2.7.1

