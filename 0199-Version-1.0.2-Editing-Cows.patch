From e235e1770dc1bcba096abf4ab883b0c5244a9835 Mon Sep 17 00:00:00 2001
From: Jason Rogena <jasonrogena@gmail.com>
Date: Sun, 15 Jun 2014 15:56:03 +0300
Subject: [PATCH 199/213] Version 1.0.2: Editing Cows

Editing of cows almost done. This is just another checkpoint
---
 .idea/libraries/actionbarsherlock_4_4_0.xml        |  10 -
 .idea/misc.xml                                     |   2 +-
 Android.iml                                        |   2 +-
 .../ilri/mistro/farmer/CowSelectionActivity.java   | 234 ++++++++++++++++++++-
 .../cgiar/ilri/mistro/farmer/EditCowActivity.java  |   3 +
 .../ilri/mistro/farmer/EditFarmerActivity.java     |   1 +
 .../mistro/farmer/FarmerSelectionActivity.java     |   1 +
 .../org/cgiar/ilri/mistro/farmer/MainMenu.java     |  10 +
 .../ilri/mistro/farmer/backend/DataHandler.java    |   1 +
 .../cgiar/ilri/mistro/farmer/carrier/Farmer.java   |   4 +
 MistroFarmer/src/main/res/values/strings_en.xml    |   1 +
 11 files changed, 256 insertions(+), 13 deletions(-)
 delete mode 100644 .idea/libraries/actionbarsherlock_4_4_0.xml

diff --git a/.idea/libraries/actionbarsherlock_4_4_0.xml b/.idea/libraries/actionbarsherlock_4_4_0.xml
deleted file mode 100644
index 25be334..0000000
--- a/.idea/libraries/actionbarsherlock_4_4_0.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<component name="libraryTable">
-  <library name="actionbarsherlock-4.4.0">
-    <CLASSES>
-      <root url="jar://$PROJECT_DIR$/MistroFarmer/build/exploded-aar/com.actionbarsherlock/actionbarsherlock/4.4.0/classes.jar!/" />
-      <root url="file://$PROJECT_DIR$/MistroFarmer/build/exploded-aar/com.actionbarsherlock/actionbarsherlock/4.4.0/res" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
diff --git a/.idea/misc.xml b/.idea/misc.xml
index b153e48..f3b00d6 100644
--- a/.idea/misc.xml
+++ b/.idea/misc.xml
@@ -3,7 +3,7 @@
   <component name="EntryPointsManager">
     <entry_points version="2.0" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_6" assert-keyword="true" jdk-15="true" project-jdk-name="JDK" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_6" assert-keyword="true" jdk-15="true" project-jdk-name="1.6" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
 </project>
diff --git a/Android.iml b/Android.iml
index 58a239a..91c73fb 100644
--- a/Android.iml
+++ b/Android.iml
@@ -6,7 +6,7 @@
       <excludeFolder url="file://$MODULE_DIR$/.gradle" />
       <excludeFolder url="file://$MODULE_DIR$/build" />
     </content>
-    <orderEntry type="jdk" jdkName="JDK" jdkType="JavaSDK" />
+    <orderEntry type="jdk" jdkName="1.6" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowSelectionActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowSelectionActivity.java
index 43cece2..89789ed 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowSelectionActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowSelectionActivity.java
@@ -1,27 +1,79 @@
 package org.cgiar.ilri.mistro.farmer;
 
 
+import android.app.ProgressDialog;
 import android.content.Intent;
+import android.os.AsyncTask;
 import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.Spinner;
+import android.widget.TextView;
+import android.widget.Toast;
 
 import com.actionbarsherlock.app.SherlockActivity;
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
 
+import org.cgiar.ilri.mistro.farmer.backend.DataHandler;
 import org.cgiar.ilri.mistro.farmer.backend.Locale;
+import org.cgiar.ilri.mistro.farmer.carrier.Cow;
+import org.cgiar.ilri.mistro.farmer.carrier.Farmer;
+import org.json.JSONArray;
+import org.json.JSONObject;
 
+import java.util.ArrayList;
+import java.util.List;
 
-public class CowSelectionActivity extends SherlockActivity implements MistroActivity {
+
+public class CowSelectionActivity extends SherlockActivity implements MistroActivity, AdapterView.OnItemSelectedListener, View.OnClickListener {
+    private static final String TAG = "CowSelectionActivity";
+    public static final String KEY_ADMIN_DATA = "adminData";
 
     private Menu menu;
 
+    private TextView selectFarmerTV;
+    private Spinner selectFarmerS;
+    private TextView selectCowTV;
+    private Spinner selectCowS;
+    private Button editB;
+    private Button cancelB;
+
+    private JSONObject adminData;
+    private List<Farmer> farmers;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_cow_selection);
+
+        selectFarmerTV = (TextView)findViewById(R.id.select_farmer_tv);
+        selectFarmerS = (Spinner)findViewById(R.id.select_farmer_s);
+        selectCowS.setOnItemSelectedListener(this);
+        selectCowTV = (TextView)findViewById(R.id.select_cow_tv);
+        selectCowS = (Spinner)findViewById(R.id.select_cow_s);
+        editB = (Button)findViewById(R.id.edit_b);
+        editB.setOnClickListener(this);
+        cancelB = (Button)findViewById(R.id.cancel_b);
+        cancelB.setOnClickListener(this);
+
+        initTextInViews();
     }
 
+    @Override
+    protected void onResume() {
+        super.onResume();
+
+        Bundle bundle=this.getIntent().getExtras();
+        if(bundle != null){
+            String adminJSONString = bundle.getString(KEY_ADMIN_DATA);
+            loadAdminData(adminJSONString);
+        }
+    }
 
     public boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu menu) {
         MenuInflater inflater = getSupportMenuInflater();
@@ -39,6 +91,7 @@ public class CowSelectionActivity extends SherlockActivity implements MistroActi
         else if(item.getItemId() == R.id.action_back_main_menu) {
             Intent intent = new Intent(this, MainMenu.class);
             intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_ADMIN);
+            intent.putExtra(MainMenu.KEY_ADMIN_DATA, adminData.toString());
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
         }
@@ -54,6 +107,185 @@ public class CowSelectionActivity extends SherlockActivity implements MistroActi
 
     @Override
     public void initTextInViews() {
+        this.setTitle(Locale.getStringInLocale("select_cow", this));
+
+        selectFarmerTV.setText(Locale.getStringInLocale("select_farmer", this));
+        selectCowTV.setText(Locale.getStringInLocale("select_cow", this));
+
+        editB.setText(Locale.getStringInLocale("edit", this));
+        cancelB.setText(Locale.getStringInLocale("cancel", this));
+    }
+
+    private void loadAdminData(String adminJSONString){
+        try {
+            adminData = new JSONObject(adminJSONString);
+            JSONArray farmerData = adminData.getJSONArray("farmers");
+
+            farmers = new ArrayList<Farmer>(farmerData.length());
+            for (int i = 0; i < farmerData.length(); i++) {
+                Farmer currFarmer = new Farmer(farmerData.getJSONObject(i));
+                farmers.add(currFarmer);
+            }
+
+            List<String> farmerNames = new ArrayList<String>(farmers.size());
+            for (int i = 0; i < farmers.size(); i++) {
+                Farmer currFarmer = farmers.get(i);
+                farmerNames.add(currFarmer.getFullName());
+            }
+
+            ArrayAdapter<String> farmerArrayAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, farmerNames);
+            farmerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+            selectFarmerS.setAdapter(farmerArrayAdapter);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    @Override
+    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
+        if(parent == selectFarmerS){
+
+            List<String> blankList = new ArrayList<String>();
+            ArrayAdapter<String> cowArrayAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, blankList);
+            cowArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+            selectCowS.setAdapter(cowArrayAdapter);
+
+            if(selectFarmerS.getSelectedItemPosition() != -1){
+                Farmer selectedFarmer = farmers.get(selectFarmerS.getSelectedItemPosition());
+                List<Cow> cows = selectedFarmer.getCows();
+                if(cows == null){
+                    GetCowDataThread getCowDataThread = new GetCowDataThread(selectFarmerS.getSelectedItemPosition());
+                    getCowDataThread.execute(selectedFarmer.getId());
+                }
+                else{
+                    loadCowData(cows);
+                }
+            }
+        }
+    }
+
+    private void loadCowData(List<Cow> cows){
+        List<String> cowNames = new ArrayList<String>();
+        for(int i = 0; i < cows.size(); i++){
+            String name = cows.get(i).getName();
+            String etn = cows.get(i).getEarTagNumber();
+
+            String dispName = "";
+            if(DataHandler.isNull(name) || name.length() == 0){
+                dispName = etn;
+            }
+            else if(DataHandler.isNull(etn) || etn.length() == 0){
+                dispName = name;
+            }
+            else{
+                dispName = name + " (" + etn + ")";
+            }
+            cowNames.add(dispName);
+        }
+
+        ArrayAdapter<String> cowArrayAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, cowNames);
+        cowArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+        selectCowS.setAdapter(cowArrayAdapter);
+    }
+
+    @Override
+    public void onNothingSelected(AdapterView<?> parent) {
+
+    }
+
+    @Override
+    public void onClick(View v) {
+        if(v == editB){
+            if(selectFarmerS.getSelectedItemPosition() != -1){
+                Farmer selectedFarmer = farmers.get(selectFarmerS.getSelectedItemPosition());
+                if(selectedFarmer != null){
+                    if(selectCowS.getSelectedItemPosition() != -1){
+                        List<Cow> cows = selectedFarmer.getCows();
+                        if(cows != null){
+                            Cow selectedCow = cows.get(selectCowS.getSelectedItemPosition());
+                            if(selectedCow != null){
+                                Intent intent=new Intent(this, EditCowActivity.class);
+                                intent.putExtra(MainMenu.KEY_ADMIN_DATA, adminData.toString());
+                                intent.putExtra(CowRegistrationActivity.KEY_INDEX, selectCowS.getSelectedItemPosition());
+                                intent.putExtra(CowRegistrationActivity.KEY_NUMBER_OF_COWS, cows.size());
+                                Bundle bundle=new Bundle();
+                                bundle.putParcelable(Farmer.PARCELABLE_KEY, selectedFarmer);
+                                intent.putExtras(bundle);
+                                startActivity(intent);
+                            }
+                        }
+                    }
+                }
+            }
+        }
+        else if(v == cancelB){
+            Intent intent = new Intent(this, MainMenu.class);
+            intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_ADMIN);
+            intent.putExtra(MainMenu.KEY_ADMIN_DATA, adminData.toString());
+            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
+            startActivity(intent);
+        }
+    }
+
+    private class GetCowDataThread extends AsyncTask<Integer, Integer, String>{
+
+        private int farmerIndex;
+        private ProgressDialog progressDialog;
+
+        public GetCowDataThread(int farmerIndex){
+            this.farmerIndex = farmerIndex;
+        }
 
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+            progressDialog = ProgressDialog.show(CowSelectionActivity.this, "", Locale.getStringInLocale("loading_please_wait", CowSelectionActivity.this), true);
+        }
+
+        @Override
+        protected String doInBackground(Integer... params) {
+            try {
+                JSONObject jsonObject = new JSONObject();
+                jsonObject.put("id", params[0]);
+                return DataHandler.sendDataToServer(CowSelectionActivity.this, jsonObject.toString(), DataHandler.ADMIN_GET_COWS_URL,true);
+            }
+            catch (Exception e){
+                e.printStackTrace();
+            }
+            return null;
+        }
+
+        @Override
+        protected void onPostExecute(String result) {
+            super.onPostExecute(result);
+            progressDialog.dismiss();
+
+            if(result==null){
+                String httpError = DataHandler.getSharedPreference(CowSelectionActivity.this, "http_error", "No Error thrown to application. Something must be really wrong");
+                Toast.makeText(CowSelectionActivity.this, httpError, Toast.LENGTH_LONG).show();
+            }
+            else if(result.equals(DataHandler.SMS_ERROR_GENERIC_FAILURE)){
+                Toast.makeText(CowSelectionActivity.this, Locale.getStringInLocale("generic_sms_error", CowSelectionActivity.this), Toast.LENGTH_LONG).show();
+            }
+            else if(result.equals(DataHandler.SMS_ERROR_NO_SERVICE)){
+                Toast.makeText(CowSelectionActivity.this, Locale.getStringInLocale("no_service", CowSelectionActivity.this), Toast.LENGTH_LONG).show();
+            }
+            else if(result.equals(DataHandler.SMS_ERROR_RADIO_OFF)){
+                Toast.makeText(CowSelectionActivity.this, Locale.getStringInLocale("radio_off", CowSelectionActivity.this), Toast.LENGTH_LONG).show();
+            }
+            else if(result.equals(DataHandler.SMS_ERROR_RESULT_CANCELLED)){
+                Toast.makeText(CowSelectionActivity.this, Locale.getStringInLocale("server_not_receive_sms", CowSelectionActivity.this), Toast.LENGTH_LONG).show();
+            }
+            else{
+                try{
+                    JSONArray cowJsonArray = new JSONArray(result);
+                    farmers.get(farmerIndex).setCows(cowJsonArray);
+                    loadCowData(farmers.get(farmerIndex).getCows());
+                }
+                catch (Exception e){
+                    e.printStackTrace();
+                }
+            }
+        }
     }
 }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditCowActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditCowActivity.java
index 1d92658..7494fab 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditCowActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditCowActivity.java
@@ -123,6 +123,7 @@ public class EditCowActivity extends SherlockActivity implements MistroActivity,
     private List<Cow> validSires;
     private List<Cow> validDams;
     private int selectedSireOwner;
+    private String adminData;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -249,6 +250,7 @@ public class EditCowActivity extends SherlockActivity implements MistroActivity,
 
                         Intent intent = new Intent(EditCowActivity.this, MainMenu.class);
                         intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_ADMIN);
+                        intent.putExtra(MainMenu.KEY_ADMIN_DATA, adminData);
                         intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
                         startActivity(intent);
                     }
@@ -306,6 +308,7 @@ public class EditCowActivity extends SherlockActivity implements MistroActivity,
 
         Bundle bundle=this.getIntent().getExtras();
         if(bundle != null) {
+            adminData=bundle.getString(MainMenu.KEY_ADMIN_DATA);
             farmer=bundle.getParcelable(Farmer.PARCELABLE_KEY);
             if(farmer!=null){
                 thisCow = farmer.getCow(index);
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditFarmerActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditFarmerActivity.java
index adecabe..108a8dc 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditFarmerActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/EditFarmerActivity.java
@@ -121,6 +121,7 @@ public class EditFarmerActivity extends SherlockActivity implements MistroActivi
 
                         Intent intent = new Intent(EditFarmerActivity.this, MainMenu.class);
                         intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_ADMIN);
+                        intent.putExtra(MainMenu.KEY_ADMIN_DATA, adminData);
                         intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
                         startActivity(intent);
                     }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerSelectionActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerSelectionActivity.java
index 7619d76..6ab4c46 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerSelectionActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerSelectionActivity.java
@@ -158,6 +158,7 @@ public class FarmerSelectionActivity extends SherlockActivity implements MistroA
         else if(item.getItemId() == R.id.action_back_main_menu) {
             Intent intent = new Intent(this, MainMenu.class);
             intent.putExtra(MainMenu.KEY_MODE, MainMenu.MODE_ADMIN);
+            intent.putExtra(MainMenu.KEY_ADMIN_DATA, adminData.toString());
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
         }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MainMenu.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MainMenu.java
index cf7efbd..e7be6bc 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MainMenu.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/MainMenu.java
@@ -191,6 +191,16 @@ public class MainMenu extends SherlockActivity implements MistroActivity, View.O
                 Log.w(TAG, "Admin data is null. Unable to move to the next activity");
             }
         }
+        else if(view==editCowB){
+            if(adminData != null){
+                Intent intent = new Intent(this, CowSelectionActivity.class);
+                intent.putExtra(CowSelectionActivity.KEY_ADMIN_DATA, adminData.toString());
+                startActivity(intent);
+            }
+            else {
+                Log.w(TAG, "Admin data is null. Unable to move to the next activity");
+            }
+        }
         else if(view==logoutB){
             Intent intent = new Intent(this, LandingActivity.class);
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
index b2d9180..d468fd6 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
@@ -89,6 +89,7 @@ public class DataHandler
 
     public static final String ADMIN_AUTHENTICATION_URL="/php/admin/authentication.php";
     public static final String ADMIN_EDIT_FARMER_URL="/php/admin/edit_farmer.php";
+    public static final String ADMIN_GET_COWS_URL="/php/admin/get_cows.php";
 
     public static final String SP_KEY_LOCALE = "locale";
     public static final String SP_KEY_MILK_QUANTITY_TYPE = "milkQuantityTYpe";
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
index c095043..8c1060c 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
@@ -75,6 +75,10 @@ public class Farmer implements Parcelable, Serializable
         }
     }
 
+    public int getId(){
+        return id;
+    }
+
     public void setCows(JSONArray cowArray){
         cows = new ArrayList<Cow>(cowArray.length());
         for(int i = 0; i < cowArray.length(); i++){
diff --git a/MistroFarmer/src/main/res/values/strings_en.xml b/MistroFarmer/src/main/res/values/strings_en.xml
index ce9148d..7173f55 100644
--- a/MistroFarmer/src/main/res/values/strings_en.xml
+++ b/MistroFarmer/src/main/res/values/strings_en.xml
@@ -334,4 +334,5 @@
     <string name="farmers_no_epersonnel_en">Farmers with no extension personnel</string>
     <string name="farmers_tied_to_en">Farmers tied to</string>
     <string name="super_admin_en">Super Admin</string>
+    <string name="select_cow_en">Select a cow</string>
 </resources>
-- 
2.7.1

