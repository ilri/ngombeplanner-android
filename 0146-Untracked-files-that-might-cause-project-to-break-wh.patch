From 663fbd2f3a7095ee534702cc3f3e5e4d93693f89 Mon Sep 17 00:00:00 2001
From: Jason Rogena <jasonrogena@gmail.com>
Date: Mon, 28 Apr 2014 08:07:49 +0300
Subject: [PATCH 146/213] Untracked files that might cause project to break
 when pulled from workspace with a different gradle build envirnoment.

---
 .gitignore                                           |  5 +++++
 .idea/copyright/profiles_settings.xml                |  4 +++-
 .../ilri/mistro/farmer/backend/DataHandler.java      | 10 +++++-----
 .../farmer/backend/database/DatabaseHelper.java      | 20 ++++++++++++++++----
 4 files changed, 29 insertions(+), 10 deletions(-)

diff --git a/.gitignore b/.gitignore
index 29919ca..c8b75ad 100644
--- a/.gitignore
+++ b/.gitignore
@@ -11,6 +11,10 @@
 #Gradle files
 .gradle/
 MistroFarmer/build/
+gradle/wrapper/gradle-wrapper.properties
+MistroFarmer/build.gradle
+MistroFarmer/MistroFarmer.iml
+Android.iml
 
 #Local configuration files
 local.properties
@@ -20,3 +24,4 @@ local.properties
 .idea/tasks.xml
 .idea/datasrouces.xml
 .idea/dataSources.ids
+.idea/misc.xml
diff --git a/.idea/copyright/profiles_settings.xml b/.idea/copyright/profiles_settings.xml
index e7bedf3..3572571 100644
--- a/.idea/copyright/profiles_settings.xml
+++ b/.idea/copyright/profiles_settings.xml
@@ -1,3 +1,5 @@
 <component name="CopyrightManager">
-  <settings default="" />
+  <settings default="">
+    <module2copyright />
+  </settings>
 </component>
\ No newline at end of file
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
index e699b0b..5f00b48 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
@@ -64,11 +64,10 @@ public class DataHandler
     private static final long SMS_RESPONSE_TIMEOUT = 300000;
     private static final int HTTP_POST_TIMEOUT =20000;
     private static final int HTTP_RESPONSE_TIMEOUT =20000;
-    //private static final String BASE_URL="http://192.168.2.232/~jason/MistroFarmerProject/web";
-    //private static final String BASE_URL="http://10.0.2.2/~jason/MistroFarmerProject/web";
     public static final String SMS_SERVER_ADDRESS = "+254708944137";
-    //private static final String BASE_URL="http://hpc.ilri.cgiar.org/~jrogena/mistro_web";
-    private static final String BASE_URL="http://azizi.ilri.cgiar.org/ngombe_planner";
+    //private static final String BASE_URL="http://azizi.ilri.cgiar.org/ngombe_planner";
+    //private static final String BASE_URL="http://192.168.14.102/~jason/ngombe_planner/WebServer";
+    private static final String BASE_URL="http://172.26.23.48/~jason/ngombe_planner/WebServer";
     public static final String FARMER_REGISTRATION_URL="/php/farmer/registration.php";
     public static final String FARMER_AUTHENTICATION_URL="/php/farmer/authentication.php";
     public static final String FARMER_SIM_CARD_REGISTRATION_URL="/php/farmer/sim_card_registration.php";
@@ -730,7 +729,7 @@ public class DataHandler
      * @param context   The activity/service from where you want to send the data to the server
      */
     public static final String sendCachedRequests(Context context, boolean waitForResponse){
-        Log.d(TAG, "Sending cached data to server");
+        Log.d(TAG, "Trying to send cached data to server");
         //public static String sendDataToServer(Context context, String jsonString, String appendedURL, boolean waitForResponse) {
         DatabaseHelper databaseHelper = new DatabaseHelper(context);
         SQLiteDatabase writableDB = databaseHelper.getWritableDatabase();
@@ -761,6 +760,7 @@ public class DataHandler
                             String response = sendDataToServer(context, finalRequest.toString(), FARMER_ADD_CACHED_DATA_URL, waitForResponse);
                             if(response != null && !response.equals(CODE_USER_NOT_AUTHENTICATED)){
                                 //delete the saved data from cache
+                                databaseHelper.runTruncateQuery(writableDB, databaseHelper.TABLE_CACHED_REQUESTS);
                                 String[] idsArray = new String[ids.size()];
                                 idsArray = ids.toArray(idsArray);
                                 databaseHelper.runDeleteQuery(writableDB, databaseHelper.TABLE_CACHED_REQUESTS, "id", idsArray);
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/database/DatabaseHelper.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/database/DatabaseHelper.java
index 056d049..dd07e1c 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/database/DatabaseHelper.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/database/DatabaseHelper.java
@@ -42,8 +42,8 @@ public class DatabaseHelper extends SQLiteOpenHelper implements Serializable{
      */
     @Override
     public void onCreate(SQLiteDatabase db) {
-        db.execSQL("CREATE TABLE "+TABLE_FARMER+" (id INTEGER PRIMARY KEY, name TEXT, mobile_no TEXT, location_county TEXT, location_district TEXT, gps_longitude TEXT, gps_latitude TEXT, date_added TEXT, sim_card_sn TEXT);");
-		db.execSQL("CREATE TABLE "+TABLE_COW+" (id INTEGER PRIMARY KEY, farmer_id INTEGER, name TEXT, ear_tag_number TEXT, date_of_birth TEXT, age INTEGER, age_type TEXT, sex TEXT, sire_id INTEGER, dam_id INTEGER, date_added TEXT, service_type TEXT, country_id INTEGER, bull_owner TEXT, owner_name TEXT);");
+        db.execSQL("CREATE TABLE " + TABLE_FARMER + " (id INTEGER PRIMARY KEY, name TEXT, mobile_no TEXT, location_county TEXT, location_district TEXT, gps_longitude TEXT, gps_latitude TEXT, date_added TEXT, sim_card_sn TEXT);");
+		db.execSQL("CREATE TABLE " + TABLE_COW + " (id INTEGER PRIMARY KEY, farmer_id INTEGER, name TEXT, ear_tag_number TEXT, date_of_birth TEXT, age INTEGER, age_type TEXT, sex TEXT, sire_id INTEGER, dam_id INTEGER, date_added TEXT, service_type TEXT, country_id INTEGER, bull_owner TEXT, owner_name TEXT);");
         db.execSQL("CREATE TABLE "+TABLE_EVENT+" (id INTEGER PRIMARY KEY, cow_id INTEGER, event_name TEXT, remarks TEXT, event_date TEXT, birth_type TEXT, parent_cow_event INTEGER, bull_id INTEGER, servicing_days INTEGER, cod TEXT, no_of_live_births INTEGER, saved_on_server INTEGER)");
         db.execSQL("CREATE TABLE "+TABLE_CACHED_REQUESTS+" (id INTEGER PRIMARY KEY AUTOINCREMENT, url TEXT, json TEXT)");
         //insert any static data to the db now
@@ -86,11 +86,11 @@ public class DatabaseHelper extends SQLiteOpenHelper implements Serializable{
      */
     public String[][] runSelectQuery(SQLiteDatabase db, String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy, String limit) {
 
-        Log.d(TAG, "About to run select query on "+table+" table");
+        Log.d(TAG, "About to run select query on " + table + " table");
         Cursor cursor=db.query(table, columns, selection, selectionArgs, groupBy, having, orderBy, limit);
         if(cursor.getCount()!=-1) {
             String[][] result=new String[cursor.getCount()][columns.length];
-            Log.d("runSelectQuery", "number of rows " + String.valueOf(cursor.getCount()));
+            Log.d(TAG, "number of rows " + String.valueOf(cursor.getCount()));
             int c1=0;
             cursor.moveToFirst();
             while(c1<cursor.getCount()) {
@@ -163,6 +163,18 @@ public class DatabaseHelper extends SQLiteOpenHelper implements Serializable{
     }
 
     /**
+     * This method deletes all data in a table. Please be careful, this method will delete all the data in that table
+     *
+     * @param db    The writable database
+     * @param table The table to truncate
+     */
+    public void runTruncateQuery(SQLiteDatabase db, String table){
+        Log.w(TAG, "About to truncate table "+table);
+        String query = "DELETE FROM "+table;
+        runQuery(db, query);
+    }
+
+    /**
      * This method runs a generic query in the database.
      * If you want to run:
      *      select queries, please use runSelectQuery()
-- 
2.7.1

