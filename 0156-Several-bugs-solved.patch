From cb62e3c38d798b054c5bc4f0243eb46db5eb1468 Mon Sep 17 00:00:00 2001
From: Jason Rogena <j.rogena@cgiar.org>
Date: Tue, 20 May 2014 12:29:36 +0300
Subject: [PATCH 156/213] Several bugs solved:    - Cow age and date of birth
 not compared during cow registration    - During cow registration, validation
 done such that either age      or date of birth has to be entered    - Data
 from edit texts now only chached if the activity is paused      by
 mistake/not by the user

---
 .idea/libraries/actionbarsherlock_4_4_0.xml        | 10 ---
 .idea/libraries/support_v4_13_0_0.xml              | 11 ---
 .../cgiar/ilri/mistro/farmer/AddEventActivity.java | 67 +++++++++++++----
 .../mistro/farmer/AddMilkProductionActivity.java   | 40 +++++++++-
 .../mistro/farmer/CowRegistrationActivity.java     | 86 ++++++++++++++++------
 .../mistro/farmer/FarmerRegistrationActivity.java  | 45 ++++++++---
 .../ilri/mistro/farmer/backend/DataHandler.java    |  2 +-
 .../main/res/layout/activity_cow_registration.xml  |  8 ++
 MistroFarmer/src/main/res/values/strings_en.xml    |  3 +
 9 files changed, 200 insertions(+), 72 deletions(-)
 delete mode 100644 .idea/libraries/actionbarsherlock_4_4_0.xml
 delete mode 100644 .idea/libraries/support_v4_13_0_0.xml

diff --git a/.idea/libraries/actionbarsherlock_4_4_0.xml b/.idea/libraries/actionbarsherlock_4_4_0.xml
deleted file mode 100644
index 25be334..0000000
--- a/.idea/libraries/actionbarsherlock_4_4_0.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<component name="libraryTable">
-  <library name="actionbarsherlock-4.4.0">
-    <CLASSES>
-      <root url="jar://$PROJECT_DIR$/MistroFarmer/build/exploded-aar/com.actionbarsherlock/actionbarsherlock/4.4.0/classes.jar!/" />
-      <root url="file://$PROJECT_DIR$/MistroFarmer/build/exploded-aar/com.actionbarsherlock/actionbarsherlock/4.4.0/res" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
diff --git a/.idea/libraries/support_v4_13_0_0.xml b/.idea/libraries/support_v4_13_0_0.xml
deleted file mode 100644
index 1a79c30..0000000
--- a/.idea/libraries/support_v4_13_0_0.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<component name="libraryTable">
-  <library name="support-v4-13.0.0">
-    <CLASSES>
-      <root url="jar://$APPLICATION_HOME_DIR$/sdk/extras/android/m2repository/com/android/support/support-v4/13.0.0/support-v4-13.0.0.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES>
-      <root url="jar://$APPLICATION_HOME_DIR$/sdk/extras/android/m2repository/com/android/support/support-v4/13.0.0/support-v4-13.0.0-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java
index 394c5ee..5617e79 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java
@@ -47,6 +47,8 @@ import java.util.List;
 
 public class AddEventActivity extends SherlockActivity implements MistroActivity, View.OnClickListener,View.OnFocusChangeListener,DatePickerDialog.OnDateSetListener, Spinner.OnItemSelectedListener
 {
+    private Boolean cacheData;
+
     public static final String TAG="AddEventActivity";
     private final String dateFormat="dd/MM/yyyy";
 
@@ -112,6 +114,8 @@ public class AddEventActivity extends SherlockActivity implements MistroActivity
         setContentView(R.layout.activity_add_event);
         DataHandler.requestPermissionToUseSMS(this);
 
+        cacheData = true;
+
         cowIdentifierTV=(TextView)findViewById(R.id.cow_identifier_tv);
         cowIdentifierS=(Spinner)findViewById(R.id.cow_identifier_s);
         dateTV=(TextView)findViewById(R.id.date_tv);
@@ -165,21 +169,19 @@ public class AddEventActivity extends SherlockActivity implements MistroActivity
         }
     }
 
-    @Override
-    protected void onPause() {
-        super.onPause();
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_DATE, dateET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_REMARKS, remarksET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_STRAW_NUMBER, strawNumberET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_VET_USED, vetUsedET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_BULL_NAME, bullNameACTV.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_BULL_OWNER, specBullOwnerET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_NO_SERVICING_DAYS, noOfServicingDaysET.getText().toString());
+    private void cacheEditTextData(){
+        if(cacheData) {
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_DATE, dateET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_REMARKS, remarksET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_STRAW_NUMBER, strawNumberET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_VET_USED, vetUsedET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_BULL_NAME, bullNameACTV.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_BULL_OWNER, specBullOwnerET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_NO_SERVICING_DAYS, noOfServicingDaysET.getText().toString());
+        }
     }
 
-    @Override
-    protected void onResume() {
-        super.onResume();
+    private void restoreEditTextData(){
         dateET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_AEA_DATE, ""));
         remarksET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_AEA_REMARKS, ""));
         strawNumberET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_AEA_STRAW_NUMBER, ""));
@@ -189,6 +191,32 @@ public class AddEventActivity extends SherlockActivity implements MistroActivity
         noOfServicingDaysET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_AEA_NO_SERVICING_DAYS, ""));
     }
 
+    private void clearEditTextDataCache(){
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_DATE, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_REMARKS, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_STRAW_NUMBER, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_VET_USED, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_BULL_NAME, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_BULL_OWNER, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AEA_NO_SERVICING_DAYS, "");
+
+        cacheData = false;
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+
+        cacheEditTextData();
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+
+        restoreEditTextData();
+    }
+
     public boolean onCreateOptionsMenu(Menu menu) {
         MenuInflater inflater = getSupportMenuInflater();
         inflater.inflate(R.menu.add_event, menu);
@@ -208,6 +236,9 @@ public class AddEventActivity extends SherlockActivity implements MistroActivity
                 public void onClick(DialogInterface dialog, int which) {
                     if(which==DialogInterface.BUTTON_POSITIVE){
                         dialog.dismiss();
+
+                        clearEditTextDataCache();
+
                         Intent intent = new Intent(AddEventActivity.this, MainMenu.class);
                         intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
                         startActivity(intent);
@@ -389,6 +420,9 @@ public class AddEventActivity extends SherlockActivity implements MistroActivity
         }
         else if(view == cancelB){
             Intent intent;
+
+            clearEditTextDataCache();
+
             if(presetMode != null && (presetMode.equals(MODE_CALVING) || presetMode.equals(MODE_SERVICING))){
                 intent = new Intent(this, FertilityActivity.class);
             }
@@ -710,6 +744,8 @@ public class AddEventActivity extends SherlockActivity implements MistroActivity
 
                         farmer.setCow(thisCalf, 0);
 
+                        clearEditTextDataCache();
+
                         Intent intent = new Intent(AddEventActivity.this, CowRegistrationActivity.class);
                         //intent.putExtra(CowRegistrationActivity.KEY_MODE,CowRegistrationActivity.MODE_COW);
                         intent.putExtra(CowRegistrationActivity.KEY_INDEX, 0);
@@ -756,6 +792,8 @@ public class AddEventActivity extends SherlockActivity implements MistroActivity
                         thisCow.setMode(Cow.MODE_ADULT_COW_REGISTRATION);
                         farmer.setCow(thisCow, 0);
 
+                        clearEditTextDataCache();
+
                         Intent intent = new Intent(AddEventActivity.this, CowRegistrationActivity.class);
                         //intent.putExtra(CowRegistrationActivity.KEY_MODE,CowRegistrationActivity.MODE_COW);
                         intent.putExtra(CowRegistrationActivity.KEY_INDEX, 0);
@@ -804,6 +842,9 @@ public class AddEventActivity extends SherlockActivity implements MistroActivity
             else if(result == true) {
                 Toast.makeText(AddEventActivity.this, eventRecorded, Toast.LENGTH_LONG).show();
                 Intent intent;
+
+                clearEditTextDataCache();
+
                 if(presetMode != null && (presetMode.equals(MODE_SERVICING) || presetMode.equals(MODE_CALVING))){
                     intent = new Intent(AddEventActivity.this, FertilityActivity.class);
                     intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java
index 8d7c949..ff66381 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java
@@ -47,6 +47,8 @@ public class AddMilkProductionActivity extends SherlockActivity implements Mistr
     private final String dateFormat="dd/MM/yyyy";
     private static final String TAG="AddMilkProductionActivity";
 
+    private boolean cacheData;
+
     private TextView cowTV;
     private Spinner cowS;
     private TextView dateTV;
@@ -78,6 +80,8 @@ public class AddMilkProductionActivity extends SherlockActivity implements Mistr
         setContentView(R.layout.activity_add_milk_production);
         DataHandler.requestPermissionToUseSMS(this);
 
+        cacheData = true;
+
         cowTV=(TextView)this.findViewById(R.id.cow_tv);
         cowS=(Spinner)this.findViewById(R.id.cow_s);
         dateTV=(TextView)this.findViewById(R.id.date_tv);
@@ -106,18 +110,37 @@ public class AddMilkProductionActivity extends SherlockActivity implements Mistr
         fetchCowIdentifiers();
     }
 
+    private void cacheEditTextData(){
+        if(cacheData){
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AMPA_DATE, dateET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AMPA_QUANTITY, quantityET.getText().toString());
+        }
+    }
+
+    private void restoreEditTextData(){
+        dateET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_AMPA_DATE, ""));
+        quantityET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_AMPA_QUANTITY, ""));
+    }
+
+    private void clearEditTextDataCache(){
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AMPA_DATE, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AMPA_QUANTITY, "");
+
+        cacheData = false;
+    }
+
     @Override
     protected void onPause() {
         super.onPause();
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AMPA_DATE, dateET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_AMPA_QUANTITY, quantityET.getText().toString());
+
+        cacheEditTextData();
     }
 
     @Override
     protected void onResume() {
         super.onResume();
-        dateET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_AMPA_DATE, ""));
-        quantityET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_AMPA_QUANTITY, ""));
+
+        restoreEditTextData();
     }
 
     public boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu menu) {
@@ -139,6 +162,9 @@ public class AddMilkProductionActivity extends SherlockActivity implements Mistr
                 public void onClick(DialogInterface dialog, int which) {
                     if(which==DialogInterface.BUTTON_POSITIVE){
                         dialog.dismiss();
+
+                        clearEditTextDataCache();
+
                         Intent intent = new Intent(AddMilkProductionActivity.this, MainMenu.class);
                         intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
                         startActivity(intent);
@@ -216,6 +242,9 @@ public class AddMilkProductionActivity extends SherlockActivity implements Mistr
             dateETClicked();
         }
         else if(view == cancelB){
+
+            clearEditTextDataCache();
+
             Intent intent = new Intent(this, MilkProductionActivity.class);
             intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
@@ -396,6 +425,9 @@ public class AddMilkProductionActivity extends SherlockActivity implements Mistr
             }
             else if(result == true) {
                 Toast.makeText(AddMilkProductionActivity.this,Locale.getStringInLocale("event_successfully_recorded", AddMilkProductionActivity.this), Toast.LENGTH_LONG).show();
+
+                clearEditTextDataCache();
+
                 Intent intent = new Intent(AddMilkProductionActivity.this, MilkProductionActivity.class);
                 intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
                 startActivity(intent);
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java
index b80acba..6999f5a 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java
@@ -35,7 +35,6 @@ import org.cgiar.ilri.mistro.farmer.carrier.Cow;
 import org.cgiar.ilri.mistro.farmer.carrier.Dam;
 import org.cgiar.ilri.mistro.farmer.carrier.Farmer;
 import org.cgiar.ilri.mistro.farmer.carrier.Sire;
-import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -49,6 +48,8 @@ import java.util.List;
 
 public class CowRegistrationActivity extends SherlockActivity implements MistroActivity, View.OnClickListener, DatePickerDialog.OnDateSetListener, ListView.OnItemClickListener,  Spinner.OnItemSelectedListener, View.OnFocusChangeListener
 {
+    private boolean cacheData;
+
     public static final String TAG="CowRegistrationActivity";
     public static final String KEY_INDEX="index";
     public static final String KEY_NUMBER_OF_COWS="numberOfCows";
@@ -57,6 +58,7 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
     private EditText nameET;
     private TextView earTagNumberTV;
     private EditText earTagNumberET;
+    private TextView ageOrDOBHintTV;
     private TextView ageTV;
     private Spinner ageS;
     private EditText ageET;
@@ -112,6 +114,8 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
         setContentView(R.layout.activity_cow_registration);
         DataHandler.requestPermissionToUseSMS(this);
 
+        cacheData = true;
+
         Bundle bundle = this.getIntent().getExtras();
         if(bundle!=null) {
             index=bundle.getInt(KEY_INDEX);
@@ -124,6 +128,7 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
         nameET=(EditText)this.findViewById(R.id.name_et);
         earTagNumberTV=(TextView)this.findViewById(R.id.ear_tag_number_tv);
         earTagNumberET=(EditText)this.findViewById(R.id.ear_tag_number_et);
+        ageOrDOBHintTV = (TextView) this.findViewById(R.id.age_or_dob_hint_tv);
         ageTV=(TextView)this.findViewById(R.id.age_tv);
         ageS=(Spinner)this.findViewById(R.id.age_s);
         ageET=(EditText)this.findViewById(R.id.age_et);
@@ -199,27 +204,23 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
         return false;
     }
 
-    @Override
-    protected void onPause() {
-        super.onPause();
-
-        //Incase the activity is hidden partially/fully save the data in edittexts
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_NAME, nameET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_EAR_TAG_NUMBER, earTagNumberET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_AGE, ageET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_DATE_OF_BIRTH, dateOfBirthET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_BREED, breedET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_DEFORMITY, deformityET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_STRAW_NUMBER, strawNumberET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_DAM, damACTV.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_EMBRYO_NUMBER, embryoNumberET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_COUNTRY_OF_ORIGIN, countryOfOriginACTV.getText().toString());
+    private void cacheEditTextData(){
+        if(cacheData) {
+            //Incase the activity is hidden partially/fully save the data in edittexts
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_NAME, nameET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_EAR_TAG_NUMBER, earTagNumberET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_AGE, ageET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_DATE_OF_BIRTH, dateOfBirthET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_BREED, breedET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_DEFORMITY, deformityET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_STRAW_NUMBER, strawNumberET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_DAM, damACTV.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_EMBRYO_NUMBER, embryoNumberET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_COUNTRY_OF_ORIGIN, countryOfOriginACTV.getText().toString());
+        }
     }
 
-    @Override
-    protected void onResume() {
-        super.onResume();
-
+    private void restoreEditTextData(){
         //incase the activity was hidden partially for a moment, restore what the user had already entered
         nameET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_CRA_NAME, ""));
         earTagNumberET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_CRA_EAR_TAG_NUMBER, ""));
@@ -231,6 +232,35 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
         damACTV.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_CRA_DAM, ""));
         embryoNumberET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_CRA_EMBRYO_NUMBER, ""));
         countryOfOriginACTV.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_CRA_COUNTRY_OF_ORIGIN, ""));
+    }
+
+    private void clearEditTextDataCache(){
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_NAME, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_EAR_TAG_NUMBER, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_AGE, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_DATE_OF_BIRTH, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_BREED, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_DEFORMITY, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_STRAW_NUMBER, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_DAM, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_EMBRYO_NUMBER, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_CRA_COUNTRY_OF_ORIGIN, "");
+
+        cacheData = false;
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+
+        cacheEditTextData();
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+
+        restoreEditTextData();
 
         Bundle bundle=this.getIntent().getExtras();
         if(bundle != null) {
@@ -420,6 +450,9 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
         this.setTitle(title);
         nameTV.setText(Locale.getStringInLocale("name",this));
         earTagNumberTV.setText(" * "+Locale.getStringInLocale("ear_tag_number",this));
+
+        ageOrDOBHintTV.setText(Locale.getStringInLocale("age_or_dob", this));
+
         ageTV.setText(" * "+Locale.getStringInLocale("age",this));
         int ageTypeArrayID = Locale.getArrayIDInLocale("age_type_array",this);
         if(ageTypeArrayID!=0){
@@ -490,6 +523,7 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
     public void onClick(View view) {
         if(view==previousButton) {
             cacheThisCow();
+            clearEditTextDataCache();//we don't want data on this cow entered on a previous or next cow
             Intent intent=new Intent(CowRegistrationActivity.this, CowRegistrationActivity.class);
             intent.putExtra(KEY_INDEX,index-1);
             intent.putExtra(KEY_NUMBER_OF_COWS,numberOfCows);
@@ -503,6 +537,9 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
                 cacheThisCow();
                 Bundle bundle=new Bundle();
                 bundle.putParcelable(Farmer.PARCELABLE_KEY,farmer);
+
+                clearEditTextDataCache();
+
                 if(index == (numberOfCows-1))//last cow
                 {
                     Log.d(TAG, farmer.getJsonObject().toString());
@@ -808,7 +845,7 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
                 Toast.makeText(this,Locale.getStringInLocale("country_not_found",this),Toast.LENGTH_LONG).show();
                 return false;
             }
-            if(!dateOfBirthET.getText().toString().trim().equals("") && !ageET.getText().toString().trim().equals("")){
+            /*if(!dateOfBirthET.getText().toString().trim().equals("") && !ageET.getText().toString().trim().equals("")){
                 String[] ageTypesInEN = Locale.getArrayInLocale("age_type_array",this,Locale.LOCALE_ENGLISH);
                 String ageType = ageTypesInEN[ageS.getSelectedItemPosition()];
                 float unitAge = 0;
@@ -832,7 +869,7 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
                     long msDiff = Math.abs(ageMs - enteredDateMs);
                     float unitDiff = msDiff / unitAge;
                     if(unitDiff > 1){
-                        Toast.makeText(this, /*Locale.getStringInLocale("age_diff_from_dob",this)*/String.valueOf(unitDiff),Toast.LENGTH_LONG).show();
+                        Toast.makeText(this, Locale.getStringInLocale("age_diff_from_dob",this),Toast.LENGTH_LONG).show();
                         return false;
                     }
                 }
@@ -840,7 +877,7 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
                 {
                     e.printStackTrace();
                 }
-            }
+            }*/
         }
         return true;
     }
@@ -1023,6 +1060,9 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
                 Toast.makeText(CowRegistrationActivity.this, Locale.getStringInLocale("server_not_receive_sms", CowRegistrationActivity.this), Toast.LENGTH_LONG).show();
             }
             else if(result.equals(DataHandler.ACKNOWLEDGE_OK)) {
+
+                clearEditTextDataCache();
+
                 Log.d(TAG,"data successfully sent to server");
                 if(farmer.getMode().equals(Farmer.MODE_INITIAL_REGISTRATION)) {
                     Utils.showSuccessfullRegistration(CowRegistrationActivity.this,null);
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerRegistrationActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerRegistrationActivity.java
index 42a32a5..078b5ad 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerRegistrationActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerRegistrationActivity.java
@@ -34,6 +34,8 @@ public class FarmerRegistrationActivity extends SherlockActivity implements Mist
 {
     public static final String TAG="FarmerRegistrationActivity";
 
+    private boolean cacheData;
+
     private String latitude;
     private String longitude;
     private TextView fullNameTV;
@@ -65,6 +67,8 @@ public class FarmerRegistrationActivity extends SherlockActivity implements Mist
         DataHandler.requestPermissionToUseSMS(this);
 
         //init child views
+        cacheData = true;
+
         fullNameTV=(TextView)this.findViewById(R.id.full_name_tv);
         fullNameET=(EditText)this.findViewById(R.id.full_name_et);
         extensionPersonnelTV=(TextView)this.findViewById(R.id.extension_personnel_tv);
@@ -97,14 +101,34 @@ public class FarmerRegistrationActivity extends SherlockActivity implements Mist
         return false;
     }
 
+    private void cacheEditTextData(){
+        if(cacheData) {
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_FULL_NAME, fullNameET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_EXTENSION_PERSONNEL, extensionPersonnelET.getText().toString());
+            DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_MOBILE_NUMBER, mobileNumberET.getText().toString());
+        }
+    }
+
+    private void restoreEditTextData(){
+        fullNameET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_FRA_FULL_NAME, ""));
+        extensionPersonnelET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_FRA_EXTENSION_PERSONNEL, ""));
+        mobileNumberET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_FRA_MOBILE_NUMBER, ""));
+    }
+
+    private void clearEditTextDataCache(){
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_FULL_NAME, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_EXTENSION_PERSONNEL, "");
+        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_MOBILE_NUMBER, "");
+
+        cacheData = false;
+    }
+
     @Override
     protected void onResume()
     {
         super.onResume();
 
-        fullNameET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_FRA_FULL_NAME, ""));
-        extensionPersonnelET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_FRA_EXTENSION_PERSONNEL, ""));
-        mobileNumberET.setText(DataHandler.getSharedPreference(this, DataHandler.SP_KEY_FRA_MOBILE_NUMBER, ""));
+        restoreEditTextData();
 
         Bundle bundle=this.getIntent().getExtras();
         if(bundle!=null)
@@ -139,9 +163,7 @@ public class FarmerRegistrationActivity extends SherlockActivity implements Mist
     {
         super.onPause();
 
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_FULL_NAME, fullNameET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_EXTENSION_PERSONNEL, extensionPersonnelET.getText().toString());
-        DataHandler.setSharedPreference(this, DataHandler.SP_KEY_FRA_MOBILE_NUMBER, mobileNumberET.getText().toString());
+        cacheEditTextData();
 
         if(locationManager!=null)
         {
@@ -152,10 +174,10 @@ public class FarmerRegistrationActivity extends SherlockActivity implements Mist
     @Override
     public void initTextInViews()
     {
-        setTitle(Locale.getStringInLocale("farmer_registration",this));
-        fullNameTV.setText(" * "+Locale.getStringInLocale("full_name",this));
-        extensionPersonnelTV.setText(Locale.getStringInLocale("extension_p",this));
-        mobileNumberTV.setText(" * "+Locale.getStringInLocale("mobile_number",this));
+        setTitle(Locale.getStringInLocale("farmer_registration", this));
+        fullNameTV.setText(" * " + Locale.getStringInLocale("full_name", this));
+        extensionPersonnelTV.setText(Locale.getStringInLocale("extension_p", this));
+        mobileNumberTV.setText(" * " + Locale.getStringInLocale("mobile_number", this));
         numberOfCowsTV.setText(" * "+Locale.getStringInLocale("number_of_cows",this));
         registerButton.setText(Locale.getStringInLocale("register",this));
         gpsAlertDialogTitle=Locale.getStringInLocale("enable_gps",this);
@@ -212,8 +234,11 @@ public class FarmerRegistrationActivity extends SherlockActivity implements Mist
             String numberOfCowsString=numberOfCowsET.getText().toString();
             if(numberOfCowsString!=null && numberOfCowsString.length()>0 && Integer.parseInt(numberOfCowsString)>0)
             {
+                clearEditTextDataCache();
+
                 int numberOfCows=Integer.valueOf(numberOfCowsString);
                 Intent intent=new Intent(FarmerRegistrationActivity.this,CowRegistrationActivity.class);
+
                 //intent.putExtra(CowRegistrationActivity.KEY_MODE,CowRegistrationActivity.MODE_COW);
                 intent.putExtra(CowRegistrationActivity.KEY_INDEX,0);
                 intent.putExtra(CowRegistrationActivity.KEY_NUMBER_OF_COWS,numberOfCows);
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
index 8edcfe9..38e4b50 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
@@ -65,7 +65,7 @@ public class DataHandler
     private static final long SMS_RESPONSE_TIMEOUT = 300000;
     private static final int HTTP_POST_TIMEOUT =20000;
     private static final int HTTP_RESPONSE_TIMEOUT =20000;
-    public static final String SMS_SERVER_ADDRESS = "+254708944137";
+    public static final String SMS_SERVER_ADDRESS = "+254708090206";
     private static final String BASE_URL="http://azizi.ilri.cgiar.org/ngombe_planner";
     //private static final String BASE_URL="http://192.168.14.102/~jason/ngombe_planner/WebServer";
     //private static final String BASE_URL="http://172.26.23.48/~jason/ngombe_planner/WebServer";
diff --git a/MistroFarmer/src/main/res/layout/activity_cow_registration.xml b/MistroFarmer/src/main/res/layout/activity_cow_registration.xml
index 6d291ec..64c2abc 100644
--- a/MistroFarmer/src/main/res/layout/activity_cow_registration.xml
+++ b/MistroFarmer/src/main/res/layout/activity_cow_registration.xml
@@ -42,6 +42,14 @@
                 android:textSize="@dimen/normal_text_size"
                 android:textColor="@color/text_input_color"
                 android:inputType="text"/>
+
+        <TextView
+            android:id="@+id/age_or_dob_hint_tv"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/activity_f_r_text_view_margin_top"
+            android:textSize="@dimen/normal_text_size" />
+
         <TextView
             android:id="@+id/age_tv"
             android:layout_width="wrap_content"
diff --git a/MistroFarmer/src/main/res/values/strings_en.xml b/MistroFarmer/src/main/res/values/strings_en.xml
index 8bdc496..be0965a 100644
--- a/MistroFarmer/src/main/res/values/strings_en.xml
+++ b/MistroFarmer/src/main/res/values/strings_en.xml
@@ -235,4 +235,7 @@
     <string name="unable_to_fetch_cached_data_en">Unable to fetch some of the data cached on you device</string>
     <string name="you_do_not_have_female_cows_en">You do not seem to have female cows</string>
     <string name="you_do_not_have_cows_en">You do not seem to have cows</string>
+
+    <!-- Added after translation-->
+    <string name="age_or_dob_en">You can enter either the cow\'s age or the date of birth</string>
 </resources>
-- 
2.7.1

