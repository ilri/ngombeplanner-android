From f8b19090154f6e3602d3824aefedf48b08bdec55 Mon Sep 17 00:00:00 2001
From: Jason Rogena <j.rogena@cgiar.org>
Date: Tue, 10 Jun 2014 15:48:42 +0300
Subject: [PATCH 192/213] Version 0.9.9.7: Checking milking_status flag

App now checks the milk_status flag when adding milk production.
Only shows cows that are adult_milking
---
 .../ilri/mistro/farmer/AddMilkProductionActivity.java      | 14 +++++++++++++-
 .../org/cgiar/ilri/mistro/farmer/backend/DataHandler.java  |  6 ++++--
 .../mistro/farmer/backend/database/DatabaseHelper.java     |  4 ++--
 .../java/org/cgiar/ilri/mistro/farmer/carrier/Cow.java     |  5 +++++
 4 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java
index e40c0f0..dc5db08 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddMilkProductionActivity.java
@@ -39,6 +39,7 @@ import org.json.JSONObject;
 
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
+import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Date;
 import java.util.GregorianCalendar;
@@ -308,6 +309,10 @@ public class AddMilkProductionActivity extends SherlockActivity implements Mistr
     {
         String[] quantityTypesInEN = Locale.getArrayInLocale("quantity_types",this,Locale.LOCALE_ENGLISH);
         String quantityType = quantityTypesInEN[quantityTypeS.getSelectedItemPosition()];
+        if(cowS.getSelectedItemPosition() == -1 || cowNameArray == null || cowNameArray.length == 0 || cowEarTagNumberArray.length == 0){
+            Toast.makeText(this, Locale.getStringInLocale("you_do_not_have_female_cows", this), Toast.LENGTH_LONG).show();
+            return false;
+        }
         if(quantityET.getText().toString()==null) {
             Toast.makeText(this, Locale.getStringInLocale("enter_quantity_of_milk_produced",this), Toast.LENGTH_LONG).show();
             return false;
@@ -571,7 +576,14 @@ public class AddMilkProductionActivity extends SherlockActivity implements Mistr
                 AddMilkProductionActivity.this.farmer = farmer;
 
                 //get cow names and ear tag numbers
-                List<Cow> cows = farmer.getCows(Cow.SEX_FEMALE);
+                List<Cow> allCows = farmer.getCows(Cow.SEX_FEMALE);
+                List<Cow> cows = new ArrayList<Cow>();
+                for(int i = 0; i < allCows.size(); i++){
+                    Cow currCow = allCows.get(i);
+                    if(currCow.getMilkingStatusCode().equals(Cow.MILKING_S_ADULT_MILKING)){
+                        cows.add(currCow);
+                    }
+                }
 
                 String[] cowArray=new String[cows.size()];
                 String[] earTagArray=new String[cows.size()];
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
index 42995c4..333384d 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
@@ -614,7 +614,7 @@ public class DataHandler
                 JSONArray cowData = farmerData.getJSONArray("cows");
                 for(int i = 0; i < cowData.length(); i++){
                     JSONObject currCow = cowData.getJSONObject(i);
-                    columns = new String[]{"id", "farmer_id", "name", "ear_tag_number", "date_of_birth", "age", "age_type", "sex", "sire_id", "dam_id", "date_added", "service_type", "country_id", "bull_owner", "owner_name"};
+                    columns = new String[]{"id", "farmer_id", "name", "ear_tag_number", "date_of_birth", "age", "age_type", "sex", "sire_id", "dam_id", "date_added", "service_type", "country_id", "bull_owner", "owner_name", "milking_status"};
                     columnValues = new String[columns.length];
 
                     columnValues[0] = currCow.getString("id");
@@ -632,6 +632,7 @@ public class DataHandler
                     columnValues[12] = currCow.getString("country_id");
                     columnValues[13] = currCow.getString("bull_owner");
                     columnValues[14] = currCow.getString("owner_name");
+                    columnValues[15] = currCow.getString("milking_status");
 
                     databaseHelper.runInsertQuery(databaseHelper.TABLE_COW, columns, columnValues, 0, writableDB);
 
@@ -738,7 +739,7 @@ public class DataHandler
             farmer.setSimCardSN(farmerResult[0][5]);
 
             //fetch cow data
-            columns = new String[]{"id", "name", "ear_tag_number", "date_of_birth", "age", "age_type", "sex", "sire_id", "dam_id", "date_added", "service_type", "country_id", "bull_owner", "owner_name"};
+            columns = new String[]{"id", "name", "ear_tag_number", "date_of_birth", "age", "age_type", "sex", "sire_id", "dam_id", "date_added", "service_type", "country_id", "bull_owner", "owner_name", "milking_status"};
             selection = "farmer_id="+farmerID;
 
             String[][] cowResult = databaseHelper.runSelectQuery(readableDB, databaseHelper.TABLE_COW, columns, selection, null, null, null, null, null);
@@ -758,6 +759,7 @@ public class DataHandler
                     currCow.setAgeType(cowResult[cowIndex][5]);
                     currCow.setSex(cowResult[cowIndex][6]);
                     currCow.setServiceType(cowResult[cowIndex][10]);
+                    currCow.setMilkingStatus(cowResult[cowIndex][14]);
 
                     //set sire
                     if(cowResult[cowIndex][7].length() > 0){
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/database/DatabaseHelper.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/database/DatabaseHelper.java
index 8e38d5c..031233c 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/database/DatabaseHelper.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/database/DatabaseHelper.java
@@ -21,7 +21,7 @@ import java.util.Map;
 public class DatabaseHelper extends SQLiteOpenHelper implements Serializable{
 
     public static final String DB_NAME = "ngombe_planner";
-    public static final int DB_VERSION = 12;
+    public static final int DB_VERSION = 13;
     public static final String TABLE_FARMER = "farmer";
     public static final String TABLE_COW = "cow";
     public static final String TABLE_EVENT = "event";
@@ -60,7 +60,7 @@ public class DatabaseHelper extends SQLiteOpenHelper implements Serializable{
     @Override
     public void onCreate(SQLiteDatabase db) {
         db.execSQL("CREATE TABLE " + TABLE_FARMER + " (id INTEGER PRIMARY KEY, name TEXT, mobile_no TEXT, location_county TEXT, location_district TEXT, gps_longitude TEXT, gps_latitude TEXT, date_added TEXT, sim_card_sn TEXT);");
-		db.execSQL("CREATE TABLE " + TABLE_COW + " (id INTEGER PRIMARY KEY, farmer_id INTEGER, name TEXT, ear_tag_number TEXT, date_of_birth TEXT, age INTEGER, age_type TEXT, sex TEXT, sire_id INTEGER, dam_id INTEGER, date_added TEXT, service_type TEXT, country_id INTEGER, bull_owner TEXT, owner_name TEXT);");
+		db.execSQL("CREATE TABLE " + TABLE_COW + " (id INTEGER PRIMARY KEY, farmer_id INTEGER, name TEXT, ear_tag_number TEXT, date_of_birth TEXT, age INTEGER, age_type TEXT, sex TEXT, sire_id INTEGER, dam_id INTEGER, date_added TEXT, service_type TEXT, country_id INTEGER, bull_owner TEXT, owner_name TEXT, milking_status TEXT);");
         db.execSQL("CREATE TABLE " + TABLE_EVENT + " (id INTEGER PRIMARY KEY, cow_id INTEGER, event_name TEXT, remarks TEXT, event_date TEXT, birth_type TEXT, parent_cow_event INTEGER, bull_id INTEGER, servicing_days INTEGER, cod TEXT, no_of_live_births INTEGER, saved_on_server INTEGER, date_added TEXT)");
         db.execSQL("CREATE TABLE " + TABLE_CACHED_REQUESTS + " (id INTEGER PRIMARY KEY AUTOINCREMENT, url TEXT, json TEXT)");
         db.execSQL("CREATE TABLE " + TABLE_MILK_PRODUCTION + " (id INTEGER PRIMARY KEY, cow_id INTEGER, time TEXT, quantity INTEGER, date_added TEXT, date TEXT, quantity_type TEXT)");
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Cow.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Cow.java
index e2022ba..162d9bc 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Cow.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Cow.java
@@ -68,6 +68,7 @@ public class Cow implements Parcelable, Serializable {
     private String milkingStatus;
     private boolean inCalf;
 
+
     public Cow(boolean isNotDamOrSire) {
         name = "";
         earTagNumber = "";
@@ -140,6 +141,10 @@ public class Cow implements Parcelable, Serializable {
         Log.d(TAG, " ****************** Milking status now is  "+this.milkingStatus);
     }
 
+    public void setMilkingStatus(String milkingStatus){
+        this.milkingStatus = milkingStatus;
+    }
+
     /**
      * This method returns the milking status code for the cow
      * Compare with Cow.MILKING_S_HEIFER etc
-- 
2.7.1

