From eacc18605b2f5caf30e1130ec3fa922c169cbeb1 Mon Sep 17 00:00:00 2001
From: Jason Rogena <j.rogena@cgiar.org>
Date: Tue, 10 Jun 2014 09:20:01 +0300
Subject: [PATCH 186/213] Version 0.9.9.7: Going back to farmer reg Activity

Users now have a previous button for going back to the farmer
registration activity from the first cow registration activity
---
 .../mistro/farmer/CowRegistrationActivity.java     | 33 +++++++++++++++-------
 .../mistro/farmer/FarmerRegistrationActivity.java  |  1 +
 .../cgiar/ilri/mistro/farmer/carrier/Farmer.java   |  7 +++++
 3 files changed, 31 insertions(+), 10 deletions(-)

diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java
index b85894f..d2a3a3b 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java
@@ -122,7 +122,7 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
     private EditText specifyET;
     private Button dialogDeformityOkayB;
 
-    private int index;
+    private int index;//index of cow in the list of cows
     private int numberOfCows;
     private int selectedBreeds;
     private String[] breeds;
@@ -335,7 +335,7 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
         if(bundle != null) {
             farmer=bundle.getParcelable(Farmer.PARCELABLE_KEY);
             if(farmer!=null){
-                if(farmer.getMode().equals(Farmer.MODE_NEW_COW_REGISTRATION) || index == 0) {
+                if(farmer.getMode().equals(Farmer.MODE_NEW_COW_REGISTRATION)) {
                     previousButton.setVisibility(Button.INVISIBLE);
                 }
                 thisCow = farmer.getCow(index);
@@ -573,7 +573,7 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
     @Override
     public boolean onKeyDown(int keyCode, KeyEvent event) {
         if(keyCode == KeyEvent.KEYCODE_BACK){
-            if(farmer.getMode().equals(Farmer.MODE_INITIAL_REGISTRATION) && index>0){
+            if(farmer.getMode().equals(Farmer.MODE_INITIAL_REGISTRATION)){
                 Toast.makeText(this,Locale.getStringInLocale("action_not_allowed",this),Toast.LENGTH_LONG).show();
                 return false;
             }
@@ -740,13 +740,26 @@ public class CowRegistrationActivity extends SherlockActivity implements MistroA
         if(view==previousButton) {
             cacheThisCow();
             clearEditTextDataCache();//we don't want data on this cow entered on a previous or next cow
-            Intent intent=new Intent(CowRegistrationActivity.this, CowRegistrationActivity.class);
-            intent.putExtra(KEY_INDEX,index-1);
-            intent.putExtra(KEY_NUMBER_OF_COWS,numberOfCows);
-            Bundle bundle=new Bundle();
-            bundle.putParcelable(Farmer.PARCELABLE_KEY,farmer);
-            intent.putExtras(bundle);
-            startActivity(intent);
+
+            if(this.index > 0){
+                Intent intent=new Intent(CowRegistrationActivity.this, CowRegistrationActivity.class);
+                intent.putExtra(KEY_INDEX,index-1);
+                intent.putExtra(KEY_NUMBER_OF_COWS,numberOfCows);
+                Bundle bundle=new Bundle();
+                bundle.putParcelable(Farmer.PARCELABLE_KEY,farmer);
+                intent.putExtras(bundle);
+                startActivity(intent);
+            }
+            else if(this.index == 0){
+                Intent intent = new Intent(CowRegistrationActivity.this, FarmerRegistrationActivity.class);
+                Bundle bundle=new Bundle();
+                bundle.putParcelable(Farmer.PARCELABLE_KEY, farmer);
+                intent.putExtras(bundle);
+                startActivity(intent);
+            }
+            else{
+                Log.e(TAG, "Current cow index is out of range ("+String.valueOf(this.index)+")");
+            }
         }
         else if(view==nextButton) {
             if(validateInput()) {
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerRegistrationActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerRegistrationActivity.java
index 19786c0..23a7fb8 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerRegistrationActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/FarmerRegistrationActivity.java
@@ -190,6 +190,7 @@ public class FarmerRegistrationActivity extends SherlockActivity implements Mist
             {
                 getGPSCoordinates();
             }
+            Log.d(TAG, "Cows be like " + String.valueOf(farmer.getCows()));
         }
         else
         {
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
index e1d3fc9..596b17f 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Farmer.java
@@ -80,6 +80,13 @@ public class Farmer implements Parcelable, Serializable
         return this.mode;
     }
 
+    /**
+     * This methods inits the number of cows the farmer has.
+     * Be warned that calling this function when this farmer object
+     * already has cows will invalidate the previous cows.
+     *
+     * @param number    The number of cows
+     */
     public void setCowNumber(int number)
     {
         this.cows=new ArrayList<Cow>();
-- 
2.7.1

