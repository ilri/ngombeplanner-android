From 3d8a23b8e3b9df019abd89668a93c928e34f375c Mon Sep 17 00:00:00 2001
From: Jason Rogena <j.rogena@cgiar.org>
Date: Tue, 15 Apr 2014 16:38:21 +0300
Subject: [PATCH 144/213] Now using cow cached data throughout the app

---
 .../cgiar/ilri/mistro/farmer/AddEventActivity.java |  55 +++++++----
 .../mistro/farmer/CowRegistrationActivity.java     |  32 +++++++
 .../cgiar/ilri/mistro/farmer/LandingActivity.java  |   3 +-
 .../ilri/mistro/farmer/backend/DataHandler.java    | 103 +++++++++++----------
 .../cgiar/ilri/mistro/farmer/carrier/Event.java    |   7 ++
 5 files changed, 132 insertions(+), 68 deletions(-)

diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java
index 0f60fa5..7c7115d 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/AddEventActivity.java
@@ -31,6 +31,7 @@ import org.cgiar.ilri.mistro.farmer.backend.DataHandler;
 import org.cgiar.ilri.mistro.farmer.backend.Locale;
 import org.cgiar.ilri.mistro.farmer.carrier.Cow;
 import org.cgiar.ilri.mistro.farmer.carrier.Dam;
+import org.cgiar.ilri.mistro.farmer.carrier.Event;
 import org.cgiar.ilri.mistro.farmer.carrier.Farmer;
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -794,8 +795,7 @@ public class AddEventActivity extends SherlockActivity implements View.OnClickLi
         }
 
         @Override
-        protected String doInBackground(JSONObject... params)
-        {
+        protected String doInBackground(JSONObject... params) {
             String result = DataHandler.sendDataToServer(AddEventActivity.this, params[0].toString(), DataHandler.FARMER_ADD_COW_EVENT_URL, true);
             return result;
         }
@@ -953,7 +953,7 @@ public class AddEventActivity extends SherlockActivity implements View.OnClickLi
         cowEventHistoryThread.execute(telephonyManager.getSimSerialNumber());
     }
 
-    private class CowEventHistoryThread extends AsyncTask<String, Integer, String> {
+    private class CowEventHistoryThread extends AsyncTask<String, Integer, Farmer> {
 
         ProgressDialog progressDialog;
 
@@ -964,8 +964,8 @@ public class AddEventActivity extends SherlockActivity implements View.OnClickLi
         }
 
         @Override
-        protected String doInBackground(String... params) {
-            String result = null;
+        protected Farmer doInBackground(String... params) {
+            /*String result = null;
             JSONObject jsonObject = new JSONObject();
             try {
                 jsonObject.put("simCardSN",params[0]);
@@ -973,24 +973,21 @@ public class AddEventActivity extends SherlockActivity implements View.OnClickLi
             }
             catch (JSONException e) {
                 e.printStackTrace();
-            }
+            }*/
 
-            return result;
+            Farmer farmer = DataHandler.getFarmerData(AddEventActivity.this);
+            return farmer;
         }
 
         @Override
-        protected void onPostExecute(String result) {
-            super.onPostExecute(result);
+        protected void onPostExecute(Farmer farmer) {
+            super.onPostExecute(farmer);
             progressDialog.dismiss();
-            if(result == null) {
-                Toast.makeText(AddEventActivity.this, Locale.getStringInLocale("problem_connecting_to_server",AddEventActivity.this), Toast.LENGTH_LONG).show();
-            }
-            else if(result.equals(DataHandler.NO_DATA)) {
-                //Toast.makeText(AddEventActivity.this, Locale.getStringInLocale("no_data_received",AddEventActivity.this), Toast.LENGTH_LONG).show();
-                Log.w(TAG, "No data received from the server");
+            if(farmer == null) {
+                Toast.makeText(AddEventActivity.this, Locale.getStringInLocale("unable_to_fetch_cached_data",AddEventActivity.this), Toast.LENGTH_LONG).show();
             }
             else {
-                try {
+                /*try {
                     JSONObject jsonObject = new JSONObject(result);
                     JSONArray historyArray = jsonObject.getJSONArray("history");
                     List<String> servicingNames = new ArrayList<String>();
@@ -1009,7 +1006,33 @@ public class AddEventActivity extends SherlockActivity implements View.OnClickLi
                 }
                 catch (JSONException e) {
                     e.printStackTrace();
+                }*/
+
+                List<Cow> allCows = farmer.getCows();
+                List<String> servicingNames = new ArrayList<String>();
+                servicingIDs = new ArrayList<Integer>();
+                servicingTypes = new ArrayList<String>();
+                for(int cowIndex = 0; cowIndex < allCows.size(); cowIndex++){
+                    //get all the events associated with this cow
+                    Cow currentCow = allCows.get(cowIndex);
+                    List<Event> cowEvents = currentCow.getEvents();
+                    for(int eventIndex = 0; eventIndex < cowEvents.size(); eventIndex++){
+                        Event currentEvent = cowEvents.get(eventIndex);
+                        if(currentEvent.isServicingEvent()){
+                            servicingIDs.add(currentEvent.getId());
+                            servicingTypes.add(currentEvent.getType());
+                            String name = currentCow.getEarTagNumber();
+                            if(name == null || name.length() == 0){
+                                name = currentCow.getName();
+                            }
+                            servicingNames.add(currentEvent.getEventDate()+" (" + name + ")");
+                        }
+                    }
                 }
+
+                ArrayAdapter<String> servicingsArrayAdapter=new ArrayAdapter<String>(AddEventActivity.this,android.R.layout.simple_spinner_dropdown_item,servicingNames);
+                servicingsArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+                servicingS.setAdapter(servicingsArrayAdapter);
             }
         }
     }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java
index d936d89..3e4f7f3 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/CowRegistrationActivity.java
@@ -1035,6 +1035,10 @@ public class CowRegistrationActivity extends SherlockActivity implements View.On
                     Utils.showSuccessfullRegistration(CowRegistrationActivity.this,null);
                 }
                 else {
+                    //get updated farmer data
+                    DataUpdateThread dataUpdateThread = new DataUpdateThread();
+                    dataUpdateThread.execute(1);
+
                     Toast.makeText(CowRegistrationActivity.this, Locale.getStringInLocale("event_successfully_recorded",CowRegistrationActivity.this), Toast.LENGTH_LONG).show();
                     Intent intent = new Intent(CowRegistrationActivity.this, EventsActivity.class);
                     startActivity(intent);
@@ -1042,4 +1046,32 @@ public class CowRegistrationActivity extends SherlockActivity implements View.On
             }
         }
     }
+
+    private class DataUpdateThread extends AsyncTask<Integer, Integer, Integer>{
+
+        @Override
+        protected Integer doInBackground(Integer... params)
+        {
+            JSONObject jsonObject=new JSONObject();
+            try
+            {
+                TelephonyManager telephonyManager=(TelephonyManager)CowRegistrationActivity.this.getSystemService(Context.TELEPHONY_SERVICE);
+                String simcardSN  = telephonyManager.getSimSerialNumber();
+                if(simcardSN != null){
+                    jsonObject.put("simCardSN",params[0]);
+                    //jsonObject.put("mobileNumber",params[1]);
+                    String result = DataHandler.sendDataToServer(CowRegistrationActivity.this, jsonObject.toString(),DataHandler.FARMER_AUTHENTICATION_URL, true);
+                    JSONObject farmerData = new JSONObject(result);
+                    DataHandler.saveFarmerData(CowRegistrationActivity.this, farmerData);
+                    return 1;
+
+                }
+            }
+            catch (JSONException e)
+            {
+                e.printStackTrace();
+            }
+            return null;
+        }
+    }
 }
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/LandingActivity.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/LandingActivity.java
index afe90c1..1b051f0 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/LandingActivity.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/LandingActivity.java
@@ -184,8 +184,7 @@ public class LandingActivity extends SherlockActivity implements View.OnClickLis
         }
     }
 
-    private class UserAuthenticationThread extends AsyncTask<String,Integer,String>
-    {
+    private class UserAuthenticationThread extends AsyncTask<String,Integer,String> {
         ProgressDialog progressDialog;
 
         @Override
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
index 57ddc26..b11530d 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/backend/DataHandler.java
@@ -575,94 +575,97 @@ public class DataHandler
 
         String[] columns = new String[]{"id","name","mobile_no","gps_longitude", "gps_latitude", "sim_card_sn"};
         String selection  = "sim_card_sn='"+simCardSN+"'";
-        String[][] result = databaseHelper.runSelectQuery(readableDB,databaseHelper.TABLE_FARMER, columns, selection, null, null, null, null, null);
-        if(result.length == 1){//only one farmer should have this sim card sn
+        String[][] farmerResult = databaseHelper.runSelectQuery(readableDB,databaseHelper.TABLE_FARMER, columns, selection, null, null, null, null, null);
+        if(farmerResult.length == 1){//only one farmer should have this sim card sn
 
-            String farmerID = result[0][0];
+            String farmerID = farmerResult[0][0];
             farmer = new Farmer();
-            farmer.setFullName(result[0][1]);
-            farmer.setMobileNumber(result[0][2]);
-            farmer.setLongitude(result[0][3]);
-            farmer.setLatitude(result[0][4]);
-            farmer.setSimCardSN(result[0][5]);
+            farmer.setFullName(farmerResult[0][1]);
+            farmer.setMobileNumber(farmerResult[0][2]);
+            farmer.setLongitude(farmerResult[0][3]);
+            farmer.setLatitude(farmerResult[0][4]);
+            farmer.setSimCardSN(farmerResult[0][5]);
 
             //fetch cow data
             columns = new String[]{"id", "name", "ear_tag_number", "date_of_birth", "age", "age_type", "sex", "sire_id", "dam_id", "date_added", "service_type", "country_id", "bull_owner", "owner_name"};
             selection = "farmer_id="+farmerID;
-            result = databaseHelper.runSelectQuery(readableDB, databaseHelper.TABLE_COW, columns, selection, null, null, null, null, null);
-            if(result.length > 0){
-                for(int cowIndex = 0 ; cowIndex < result.length; cowIndex++){
+
+            String[][] cowResult = databaseHelper.runSelectQuery(readableDB, databaseHelper.TABLE_COW, columns, selection, null, null, null, null, null);
+            if(cowResult.length > 0){
+                for(int cowIndex = 0 ; cowIndex < cowResult.length; cowIndex++){
                     Cow currCow = new Cow(true);
 
-                    String cowID = result[cowIndex][0];
-                    currCow.setName(result[cowIndex][1]);
-                    currCow.setEarTagNumber(result[cowIndex][2]);
-                    Log.d(TAG, "Current cow's name and eartag number are "+result[cowIndex][1]+ " " + result[cowIndex][2]);
-                    currCow.setDateOfBirth(result[cowIndex][3]); //TODO: not sure if this will work
-                    if(result[cowIndex][4].length() > 0){
-                        currCow.setAge(Integer.parseInt(result[cowIndex][4]));
+                    String cowID = cowResult[cowIndex][0];
+                    currCow.setName(cowResult[cowIndex][1]);
+                    currCow.setEarTagNumber(cowResult[cowIndex][2]);
+                    Log.d(TAG, "Current cow's name and eartag number are "+cowResult[cowIndex][1]+ " " + cowResult[cowIndex][2]);
+                    currCow.setDateOfBirth(cowResult[cowIndex][3]); //TODO: not sure if this will work
+                    if(cowResult[cowIndex][4].length() > 0){
+                        currCow.setAge(Integer.parseInt(cowResult[cowIndex][4]));
                     }
-                    currCow.setAgeType(result[cowIndex][5]);
-                    currCow.setSex(result[cowIndex][6]);
-                    currCow.setServiceType(result[cowIndex][10]);
+                    currCow.setAgeType(cowResult[cowIndex][5]);
+                    currCow.setSex(cowResult[cowIndex][6]);
+                    currCow.setServiceType(cowResult[cowIndex][10]);
 
                     //set sire
-                    if(result[cowIndex][7].length() > 0){
-                        selection = "id="+result[cowIndex][7];
+                    if(cowResult[cowIndex][7].length() > 0){
+                        columns = new String[]{"id", "name", "ear_tag_number", "date_of_birth", "age", "age_type", "sex", "sire_id", "dam_id", "date_added", "service_type", "country_id", "bull_owner", "owner_name"};
+                        selection = "id="+cowResult[cowIndex][7];
                         String[][] sireRes = databaseHelper.runSelectQuery(readableDB, databaseHelper.TABLE_COW, columns, selection, null, null, null, null, null);
                         if(sireRes.length == 1){
                             Sire sire = new Sire();
-                            sire.setName(result[cowIndex][1]);
-                            sire.setEarTagNumber(result[cowIndex][2]);
+                            sire.setName(sireRes[cowIndex][1]);
+                            sire.setEarTagNumber(sireRes[cowIndex][2]);
 
                             currCow.setSire(sire);
                         }
                         else{
                             Log.w(TAG, "No sire fetched for current cow");
-                            Log.w(TAG, " cow's id = "+result[cowIndex][0]);
-                            Log.w(TAG, " sire's id = "+result[cowIndex][7]);
+                            Log.w(TAG, " cow's id = "+cowResult[cowIndex][0]);
+                            Log.w(TAG, " sire's id = "+cowResult[cowIndex][7]);
                         }
                     }
 
                     //set dam
-                    if(result[cowIndex][8].length() > 0){
-                        selection = "id="+result[cowIndex][7];
+                    if(cowResult[cowIndex][8].length() > 0){
+                        columns = new String[]{"id", "name", "ear_tag_number", "date_of_birth", "age", "age_type", "sex", "sire_id", "dam_id", "date_added", "service_type", "country_id", "bull_owner", "owner_name"};
+                        selection = "id="+cowResult[cowIndex][7];
                         String[][] damRes = databaseHelper.runSelectQuery(readableDB, databaseHelper.TABLE_COW, columns, selection, null, null, null, null, null);
                         if(damRes.length == 1){
                             Dam dam = new Dam();
-                            dam.setName(result[cowIndex][1]);
-                            dam.setEarTagNumber(result[cowIndex][2]);
+                            dam.setName(damRes[cowIndex][1]);
+                            dam.setEarTagNumber(damRes[cowIndex][2]);
 
                             currCow.setDam(dam);
                         }
                         else{
                             Log.w(TAG, "No dam fetched for current cow");
-                            Log.w(TAG, " cow's id = "+result[cowIndex][0]);
-                            Log.w(TAG, " dam's id = "+result[cowIndex][8]);
+                            Log.w(TAG, " cow's id = "+cowResult[cowIndex][0]);
+                            Log.w(TAG, " dam's id = "+cowResult[cowIndex][8]);
                         }
                     }
 
                     //fetch cow events
                     columns = new String[] {"id", "cow_id", "event_name", "remarks", "event_date", "birth_type", "parent_cow_event", "bull_id", "servicing_days", "cod", "no_of_live_births"};
                     selection = "cow_id="+cowID;
-                    result = databaseHelper.runSelectQuery(readableDB, databaseHelper.TABLE_EVENT, columns, selection, null, null, null, null, null);
-                    for(int eventIndex = 0; eventIndex < result.length; eventIndex++){
+                    String[][] eventResult = databaseHelper.runSelectQuery(readableDB, databaseHelper.TABLE_EVENT, columns, selection, null, null, null, null, null);
+                    for(int eventIndex = 0; eventIndex < eventResult.length; eventIndex++){
                         Event currEvent = new Event();
 
-                        currEvent.setId(Integer.parseInt(result[eventIndex][0]));
-                        currEvent.setType(result[eventIndex][2]);
-                        currEvent.setRemarks(result[eventIndex][3]);
-                        currEvent.setEventDate(result[eventIndex][4]);
-                        currEvent.setBirthType(result[eventIndex][5]);
-                        if(result[eventIndex][6].length() > 0)
-                            currEvent.setParentCowEventID(Integer.parseInt(result[eventIndex][6]));
-                        if(result[eventIndex][7].length() > 0)
-                            currEvent.setBullID(Integer.parseInt(result[eventIndex][7]));
-                        if(result[eventIndex][8].length() > 0)
-                            currEvent.setServicingDays(Integer.parseInt(result[eventIndex][8]));
-                        currEvent.setCod(result[eventIndex][9]);
-                        if(result[eventIndex][10].length() > 0)
-                            currEvent.setNoOfLiveBirths(Integer.parseInt(result[eventIndex][10]));
+                        currEvent.setId(Integer.parseInt(eventResult[eventIndex][0]));
+                        currEvent.setType(eventResult[eventIndex][2]);
+                        currEvent.setRemarks(eventResult[eventIndex][3]);
+                        currEvent.setEventDate(eventResult[eventIndex][4]);
+                        currEvent.setBirthType(eventResult[eventIndex][5]);
+                        if(eventResult[eventIndex][6].length() > 0)
+                            currEvent.setParentCowEventID(Integer.parseInt(eventResult[eventIndex][6]));
+                        if(eventResult[eventIndex][7].length() > 0)
+                            currEvent.setBullID(Integer.parseInt(eventResult[eventIndex][7]));
+                        if(eventResult[eventIndex][8].length() > 0)
+                            currEvent.setServicingDays(Integer.parseInt(eventResult[eventIndex][8]));
+                        currEvent.setCod(eventResult[eventIndex][9]);
+                        if(eventResult[eventIndex][10].length() > 0)
+                            currEvent.setNoOfLiveBirths(Integer.parseInt(eventResult[eventIndex][10]));
 
                         currCow.addEvent(currEvent);
                     }
@@ -678,7 +681,7 @@ public class DataHandler
         else{
             Log.e(TAG, "Unable to get cached farmer data. Might be because no farmer in has the provided simCardSN or more than one do");
             Log.e(TAG, " SimcardSN = "+simCardSN);
-            Log.e(TAG, " Number of fetched farmers = "+String.valueOf(result.length));
+            Log.e(TAG, " Number of fetched farmers = "+String.valueOf(farmerResult.length));
         }
 
         return farmer;
diff --git a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Event.java b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Event.java
index 3f88ff5..219c3b3 100644
--- a/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Event.java
+++ b/MistroFarmer/src/main/java/org/cgiar/ilri/mistro/farmer/carrier/Event.java
@@ -84,6 +84,13 @@ public class Event {
         this.servicingDays = servicingDays;
     }
 
+    public boolean isServicingEvent(){
+        if(type.equals("Artificial Insemination") || type.equals("Bull Servicing")){
+            return true;
+        }
+        return false;
+    }
+
     public String getCod() {
         return cod;
     }
-- 
2.7.1

